// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: root.proto

public final class RootOuterClass {
  private RootOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code FlagType}
   */
  public enum FlagType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>Ignore = 0;</code>
     */
    Ignore(0),
    /**
     * <code>Global = 1;</code>
     */
    Global(1),
    /**
     * <code>Multiline = 2;</code>
     */
    Multiline(2),
    /**
     * <code>Unicode = 3;</code>
     */
    Unicode(3),
    /**
     * <code>Sticky = 4;</code>
     */
    Sticky(4),
    /**
     * <code>Dotall = 5;</code>
     */
    Dotall(5),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>Ignore = 0;</code>
     */
    public static final int Ignore_VALUE = 0;
    /**
     * <code>Global = 1;</code>
     */
    public static final int Global_VALUE = 1;
    /**
     * <code>Multiline = 2;</code>
     */
    public static final int Multiline_VALUE = 2;
    /**
     * <code>Unicode = 3;</code>
     */
    public static final int Unicode_VALUE = 3;
    /**
     * <code>Sticky = 4;</code>
     */
    public static final int Sticky_VALUE = 4;
    /**
     * <code>Dotall = 5;</code>
     */
    public static final int Dotall_VALUE = 5;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static FlagType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static FlagType forNumber(int value) {
      switch (value) {
        case 0: return Ignore;
        case 1: return Global;
        case 2: return Multiline;
        case 3: return Unicode;
        case 4: return Sticky;
        case 5: return Dotall;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<FlagType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        FlagType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<FlagType>() {
            public FlagType findValueByNumber(int number) {
              return FlagType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return RootOuterClass.getDescriptor().getEnumTypes().get(0);
    }

    private static final FlagType[] VALUES = values();

    public static FlagType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private FlagType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:FlagType)
  }

  /**
   * Protobuf enum {@code SubstitutionType}
   */
  public enum SubstitutionType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>Match = 0;</code>
     */
    Match(0),
    /**
     * <code>Capture = 1;</code>
     */
    Capture(1),
    /**
     * <code>BeforeMatch = 2;</code>
     */
    BeforeMatch(2),
    /**
     * <code>AfterMatch = 3;</code>
     */
    AfterMatch(3),
    /**
     * <code>EscapedDollar = 4;</code>
     */
    EscapedDollar(4),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>Match = 0;</code>
     */
    public static final int Match_VALUE = 0;
    /**
     * <code>Capture = 1;</code>
     */
    public static final int Capture_VALUE = 1;
    /**
     * <code>BeforeMatch = 2;</code>
     */
    public static final int BeforeMatch_VALUE = 2;
    /**
     * <code>AfterMatch = 3;</code>
     */
    public static final int AfterMatch_VALUE = 3;
    /**
     * <code>EscapedDollar = 4;</code>
     */
    public static final int EscapedDollar_VALUE = 4;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static SubstitutionType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static SubstitutionType forNumber(int value) {
      switch (value) {
        case 0: return Match;
        case 1: return Capture;
        case 2: return BeforeMatch;
        case 3: return AfterMatch;
        case 4: return EscapedDollar;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SubstitutionType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        SubstitutionType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SubstitutionType>() {
            public SubstitutionType findValueByNumber(int number) {
              return SubstitutionType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return RootOuterClass.getDescriptor().getEnumTypes().get(1);
    }

    private static final SubstitutionType[] VALUES = values();

    public static SubstitutionType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private SubstitutionType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:SubstitutionType)
  }

  /**
   * Protobuf enum {@code AnchorType}
   */
  public enum AnchorType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>Beginning = 0;</code>
     */
    Beginning(0),
    /**
     * <code>End = 1;</code>
     */
    End(1),
    /**
     * <code>WordBoundary = 2;</code>
     */
    WordBoundary(2),
    /**
     * <code>NotWordBoundary = 3;</code>
     */
    NotWordBoundary(3),
    /**
     * <pre>
     * /.../ means the string in between is regex (js specific)
     * </pre>
     *
     * <code>ForwardSlash = 4;</code>
     */
    ForwardSlash(4),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>Beginning = 0;</code>
     */
    public static final int Beginning_VALUE = 0;
    /**
     * <code>End = 1;</code>
     */
    public static final int End_VALUE = 1;
    /**
     * <code>WordBoundary = 2;</code>
     */
    public static final int WordBoundary_VALUE = 2;
    /**
     * <code>NotWordBoundary = 3;</code>
     */
    public static final int NotWordBoundary_VALUE = 3;
    /**
     * <pre>
     * /.../ means the string in between is regex (js specific)
     * </pre>
     *
     * <code>ForwardSlash = 4;</code>
     */
    public static final int ForwardSlash_VALUE = 4;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static AnchorType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static AnchorType forNumber(int value) {
      switch (value) {
        case 0: return Beginning;
        case 1: return End;
        case 2: return WordBoundary;
        case 3: return NotWordBoundary;
        case 4: return ForwardSlash;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<AnchorType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        AnchorType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<AnchorType>() {
            public AnchorType findValueByNumber(int number) {
              return AnchorType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return RootOuterClass.getDescriptor().getEnumTypes().get(2);
    }

    private static final AnchorType[] VALUES = values();

    public static AnchorType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private AnchorType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:AnchorType)
  }

  /**
   * Protobuf enum {@code QuantifierModifierType}
   */
  public enum QuantifierModifierType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>Plus = 0;</code>
     */
    Plus(0),
    /**
     * <code>Star = 1;</code>
     */
    Star(1),
    /**
     * <pre>
     * Something like {1,3}
     * </pre>
     *
     * <code>SpecifiedQuantifier = 2;</code>
     */
    SpecifiedQuantifier(2),
    /**
     * <code>Optional = 3;</code>
     */
    Optional(3),
    /**
     * <code>Lazy = 4;</code>
     */
    Lazy(4),
    /**
     * <pre>
     * the usage of | as an alternator
     * </pre>
     *
     * <code>AlternationPipe = 5;</code>
     */
    AlternationPipe(5),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>Plus = 0;</code>
     */
    public static final int Plus_VALUE = 0;
    /**
     * <code>Star = 1;</code>
     */
    public static final int Star_VALUE = 1;
    /**
     * <pre>
     * Something like {1,3}
     * </pre>
     *
     * <code>SpecifiedQuantifier = 2;</code>
     */
    public static final int SpecifiedQuantifier_VALUE = 2;
    /**
     * <code>Optional = 3;</code>
     */
    public static final int Optional_VALUE = 3;
    /**
     * <code>Lazy = 4;</code>
     */
    public static final int Lazy_VALUE = 4;
    /**
     * <pre>
     * the usage of | as an alternator
     * </pre>
     *
     * <code>AlternationPipe = 5;</code>
     */
    public static final int AlternationPipe_VALUE = 5;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static QuantifierModifierType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static QuantifierModifierType forNumber(int value) {
      switch (value) {
        case 0: return Plus;
        case 1: return Star;
        case 2: return SpecifiedQuantifier;
        case 3: return Optional;
        case 4: return Lazy;
        case 5: return AlternationPipe;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<QuantifierModifierType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        QuantifierModifierType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<QuantifierModifierType>() {
            public QuantifierModifierType findValueByNumber(int number) {
              return QuantifierModifierType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return RootOuterClass.getDescriptor().getEnumTypes().get(3);
    }

    private static final QuantifierModifierType[] VALUES = values();

    public static QuantifierModifierType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private QuantifierModifierType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:QuantifierModifierType)
  }

  /**
   * Protobuf enum {@code LookaroundType}
   */
  public enum LookaroundType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * ?=
     * </pre>
     *
     * <code>PositiveLookahead = 0;</code>
     */
    PositiveLookahead(0),
    /**
     * <pre>
     * ?!
     * </pre>
     *
     * <code>NegativeLookahead = 1;</code>
     */
    NegativeLookahead(1),
    /**
     * <pre>
     * ?&lt;=
     * </pre>
     *
     * <code>PositiveLookbehind = 2;</code>
     */
    PositiveLookbehind(2),
    /**
     * <pre>
     * ?&lt;!
     * </pre>
     *
     * <code>NegativeLookbehind = 3;</code>
     */
    NegativeLookbehind(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * ?=
     * </pre>
     *
     * <code>PositiveLookahead = 0;</code>
     */
    public static final int PositiveLookahead_VALUE = 0;
    /**
     * <pre>
     * ?!
     * </pre>
     *
     * <code>NegativeLookahead = 1;</code>
     */
    public static final int NegativeLookahead_VALUE = 1;
    /**
     * <pre>
     * ?&lt;=
     * </pre>
     *
     * <code>PositiveLookbehind = 2;</code>
     */
    public static final int PositiveLookbehind_VALUE = 2;
    /**
     * <pre>
     * ?&lt;!
     * </pre>
     *
     * <code>NegativeLookbehind = 3;</code>
     */
    public static final int NegativeLookbehind_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static LookaroundType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static LookaroundType forNumber(int value) {
      switch (value) {
        case 0: return PositiveLookahead;
        case 1: return NegativeLookahead;
        case 2: return PositiveLookbehind;
        case 3: return NegativeLookbehind;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<LookaroundType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        LookaroundType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<LookaroundType>() {
            public LookaroundType findValueByNumber(int number) {
              return LookaroundType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return RootOuterClass.getDescriptor().getEnumTypes().get(4);
    }

    private static final LookaroundType[] VALUES = values();

    public static LookaroundType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private LookaroundType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:LookaroundType)
  }

  /**
   * Protobuf enum {@code EscapeType}
   */
  public enum EscapeType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * UnicodeEscape instead of Unicode because Unicode is also a Flag type
     * </pre>
     *
     * <code>UnicodeEscape = 0;</code>
     */
    UnicodeEscape(0),
    /**
     * <pre>
     * &#92;000
     * </pre>
     *
     * <code>Octal = 1;</code>
     */
    Octal(1),
    /**
     * <pre>
     * &#92;xFF, &#92;xF0, etc.
     * </pre>
     *
     * <code>Hexadecimal = 2;</code>
     */
    Hexadecimal(2),
    /**
     * <pre>
     * &#92;+, &#92;&#92;, etc.
     * </pre>
     *
     * <code>Reserved = 3;</code>
     */
    Reserved(3),
    /**
     * <pre>
     * &#92;cI
     * </pre>
     *
     * <code>Control = 4;</code>
     */
    Control(4),
    /**
     * <pre>
     * &#92;t
     * </pre>
     *
     * <code>Tab = 5;</code>
     */
    Tab(5),
    /**
     * <pre>
     * &#92;n
     * </pre>
     *
     * <code>Newline = 6;</code>
     */
    Newline(6),
    /**
     * <pre>
     * &#92;v
     * </pre>
     *
     * <code>VerticalTab = 7;</code>
     */
    VerticalTab(7),
    /**
     * <pre>
     * &#92;f
     * </pre>
     *
     * <code>FormFeed = 8;</code>
     */
    FormFeed(8),
    /**
     * <pre>
     * &#92;r
     * </pre>
     *
     * <code>CarriageReturn = 9;</code>
     */
    CarriageReturn(9),
    /**
     * <pre>
     * &#92;0
     * </pre>
     *
     * <code>Null = 10;</code>
     */
    Null(10),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * UnicodeEscape instead of Unicode because Unicode is also a Flag type
     * </pre>
     *
     * <code>UnicodeEscape = 0;</code>
     */
    public static final int UnicodeEscape_VALUE = 0;
    /**
     * <pre>
     * &#92;000
     * </pre>
     *
     * <code>Octal = 1;</code>
     */
    public static final int Octal_VALUE = 1;
    /**
     * <pre>
     * &#92;xFF, &#92;xF0, etc.
     * </pre>
     *
     * <code>Hexadecimal = 2;</code>
     */
    public static final int Hexadecimal_VALUE = 2;
    /**
     * <pre>
     * &#92;+, &#92;&#92;, etc.
     * </pre>
     *
     * <code>Reserved = 3;</code>
     */
    public static final int Reserved_VALUE = 3;
    /**
     * <pre>
     * &#92;cI
     * </pre>
     *
     * <code>Control = 4;</code>
     */
    public static final int Control_VALUE = 4;
    /**
     * <pre>
     * &#92;t
     * </pre>
     *
     * <code>Tab = 5;</code>
     */
    public static final int Tab_VALUE = 5;
    /**
     * <pre>
     * &#92;n
     * </pre>
     *
     * <code>Newline = 6;</code>
     */
    public static final int Newline_VALUE = 6;
    /**
     * <pre>
     * &#92;v
     * </pre>
     *
     * <code>VerticalTab = 7;</code>
     */
    public static final int VerticalTab_VALUE = 7;
    /**
     * <pre>
     * &#92;f
     * </pre>
     *
     * <code>FormFeed = 8;</code>
     */
    public static final int FormFeed_VALUE = 8;
    /**
     * <pre>
     * &#92;r
     * </pre>
     *
     * <code>CarriageReturn = 9;</code>
     */
    public static final int CarriageReturn_VALUE = 9;
    /**
     * <pre>
     * &#92;0
     * </pre>
     *
     * <code>Null = 10;</code>
     */
    public static final int Null_VALUE = 10;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static EscapeType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static EscapeType forNumber(int value) {
      switch (value) {
        case 0: return UnicodeEscape;
        case 1: return Octal;
        case 2: return Hexadecimal;
        case 3: return Reserved;
        case 4: return Control;
        case 5: return Tab;
        case 6: return Newline;
        case 7: return VerticalTab;
        case 8: return FormFeed;
        case 9: return CarriageReturn;
        case 10: return Null;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EscapeType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        EscapeType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EscapeType>() {
            public EscapeType findValueByNumber(int number) {
              return EscapeType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return RootOuterClass.getDescriptor().getEnumTypes().get(5);
    }

    private static final EscapeType[] VALUES = values();

    public static EscapeType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private EscapeType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:EscapeType)
  }

  /**
   * Protobuf enum {@code GroupReferenceType}
   */
  public enum GroupReferenceType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * (
     * </pre>
     *
     * <code>OpenCapture = 0;</code>
     */
    OpenCapture(0),
    /**
     * <pre>
     * )
     * </pre>
     *
     * <code>CloseCapture = 1;</code>
     */
    CloseCapture(1),
    /**
     * <pre>
     * in the expression (?&lt;name&gt;ABC), this is &lt;name&gt;
     * </pre>
     *
     * <code>GroupName = 2;</code>
     */
    GroupName(2),
    /**
     * <pre>
     * &#92;1, &#92;2, etc.
     * </pre>
     *
     * <code>NumericReference = 3;</code>
     */
    NumericReference(3),
    /**
     * <pre>
     * In the expression (?:ABC), this is ?:
     * </pre>
     *
     * <code>NonCapturing = 4;</code>
     */
    NonCapturing(4),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * (
     * </pre>
     *
     * <code>OpenCapture = 0;</code>
     */
    public static final int OpenCapture_VALUE = 0;
    /**
     * <pre>
     * )
     * </pre>
     *
     * <code>CloseCapture = 1;</code>
     */
    public static final int CloseCapture_VALUE = 1;
    /**
     * <pre>
     * in the expression (?&lt;name&gt;ABC), this is &lt;name&gt;
     * </pre>
     *
     * <code>GroupName = 2;</code>
     */
    public static final int GroupName_VALUE = 2;
    /**
     * <pre>
     * &#92;1, &#92;2, etc.
     * </pre>
     *
     * <code>NumericReference = 3;</code>
     */
    public static final int NumericReference_VALUE = 3;
    /**
     * <pre>
     * In the expression (?:ABC), this is ?:
     * </pre>
     *
     * <code>NonCapturing = 4;</code>
     */
    public static final int NonCapturing_VALUE = 4;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static GroupReferenceType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static GroupReferenceType forNumber(int value) {
      switch (value) {
        case 0: return OpenCapture;
        case 1: return CloseCapture;
        case 2: return GroupName;
        case 3: return NumericReference;
        case 4: return NonCapturing;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<GroupReferenceType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        GroupReferenceType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<GroupReferenceType>() {
            public GroupReferenceType findValueByNumber(int number) {
              return GroupReferenceType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return RootOuterClass.getDescriptor().getEnumTypes().get(6);
    }

    private static final GroupReferenceType[] VALUES = values();

    public static GroupReferenceType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private GroupReferenceType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:GroupReferenceType)
  }

  /**
   * Protobuf enum {@code CharacterClassType}
   */
  public enum CharacterClassType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * [ in [ABC]
     * </pre>
     *
     * <code>OpenSet = 0;</code>
     */
    OpenSet(0),
    /**
     * <pre>
     * ] in [ABC]
     * </pre>
     *
     * <code>CloseSet = 1;</code>
     */
    CloseSet(1),
    /**
     * <pre>
     * ^ in [^ABC]
     * </pre>
     *
     * <code>SetNegation = 2;</code>
     */
    SetNegation(2),
    /**
     * <pre>
     * ABC in [ABC]
     * </pre>
     *
     * <code>InclusiveSet = 3;</code>
     */
    InclusiveSet(3),
    /**
     * <pre>
     * A-Z in [A-Z]
     * </pre>
     *
     * <code>RangeSet = 4;</code>
     */
    RangeSet(4),
    /**
     * <pre>
     * .
     * </pre>
     *
     * <code>Dot = 5;</code>
     */
    Dot(5),
    /**
     * <pre>
     * &#92;w
     * </pre>
     *
     * <code>Word = 6;</code>
     */
    Word(6),
    /**
     * <pre>
     * &#92;W
     * </pre>
     *
     * <code>NotWord = 7;</code>
     */
    NotWord(7),
    /**
     * <pre>
     * &#92;d
     * </pre>
     *
     * <code>Digit = 8;</code>
     */
    Digit(8),
    /**
     * <pre>
     * &#92;D
     * </pre>
     *
     * <code>NotDigit = 9;</code>
     */
    NotDigit(9),
    /**
     * <pre>
     * &#92;s
     * </pre>
     *
     * <code>Whitespace = 10;</code>
     */
    Whitespace(10),
    /**
     * <pre>
     * &#92;S
     * </pre>
     *
     * <code>NotWhitespace = 11;</code>
     */
    NotWhitespace(11),
    /**
     * <pre>
     * &#92;p{...} include unicode category and script
     * </pre>
     *
     * <code>UnicodePropertyEscape = 12;</code>
     */
    UnicodePropertyEscape(12),
    /**
     * <pre>
     * &#92;P{...}
     * </pre>
     *
     * <code>NotUnicodePropertyEscape = 13;</code>
     */
    NotUnicodePropertyEscape(13),
    /**
     * <pre>
     * (?&gt;...)
     * </pre>
     *
     * <code>AtomicGroup = 14;</code>
     */
    AtomicGroup(14),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * [ in [ABC]
     * </pre>
     *
     * <code>OpenSet = 0;</code>
     */
    public static final int OpenSet_VALUE = 0;
    /**
     * <pre>
     * ] in [ABC]
     * </pre>
     *
     * <code>CloseSet = 1;</code>
     */
    public static final int CloseSet_VALUE = 1;
    /**
     * <pre>
     * ^ in [^ABC]
     * </pre>
     *
     * <code>SetNegation = 2;</code>
     */
    public static final int SetNegation_VALUE = 2;
    /**
     * <pre>
     * ABC in [ABC]
     * </pre>
     *
     * <code>InclusiveSet = 3;</code>
     */
    public static final int InclusiveSet_VALUE = 3;
    /**
     * <pre>
     * A-Z in [A-Z]
     * </pre>
     *
     * <code>RangeSet = 4;</code>
     */
    public static final int RangeSet_VALUE = 4;
    /**
     * <pre>
     * .
     * </pre>
     *
     * <code>Dot = 5;</code>
     */
    public static final int Dot_VALUE = 5;
    /**
     * <pre>
     * &#92;w
     * </pre>
     *
     * <code>Word = 6;</code>
     */
    public static final int Word_VALUE = 6;
    /**
     * <pre>
     * &#92;W
     * </pre>
     *
     * <code>NotWord = 7;</code>
     */
    public static final int NotWord_VALUE = 7;
    /**
     * <pre>
     * &#92;d
     * </pre>
     *
     * <code>Digit = 8;</code>
     */
    public static final int Digit_VALUE = 8;
    /**
     * <pre>
     * &#92;D
     * </pre>
     *
     * <code>NotDigit = 9;</code>
     */
    public static final int NotDigit_VALUE = 9;
    /**
     * <pre>
     * &#92;s
     * </pre>
     *
     * <code>Whitespace = 10;</code>
     */
    public static final int Whitespace_VALUE = 10;
    /**
     * <pre>
     * &#92;S
     * </pre>
     *
     * <code>NotWhitespace = 11;</code>
     */
    public static final int NotWhitespace_VALUE = 11;
    /**
     * <pre>
     * &#92;p{...} include unicode category and script
     * </pre>
     *
     * <code>UnicodePropertyEscape = 12;</code>
     */
    public static final int UnicodePropertyEscape_VALUE = 12;
    /**
     * <pre>
     * &#92;P{...}
     * </pre>
     *
     * <code>NotUnicodePropertyEscape = 13;</code>
     */
    public static final int NotUnicodePropertyEscape_VALUE = 13;
    /**
     * <pre>
     * (?&gt;...)
     * </pre>
     *
     * <code>AtomicGroup = 14;</code>
     */
    public static final int AtomicGroup_VALUE = 14;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static CharacterClassType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static CharacterClassType forNumber(int value) {
      switch (value) {
        case 0: return OpenSet;
        case 1: return CloseSet;
        case 2: return SetNegation;
        case 3: return InclusiveSet;
        case 4: return RangeSet;
        case 5: return Dot;
        case 6: return Word;
        case 7: return NotWord;
        case 8: return Digit;
        case 9: return NotDigit;
        case 10: return Whitespace;
        case 11: return NotWhitespace;
        case 12: return UnicodePropertyEscape;
        case 13: return NotUnicodePropertyEscape;
        case 14: return AtomicGroup;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CharacterClassType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        CharacterClassType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CharacterClassType>() {
            public CharacterClassType findValueByNumber(int number) {
              return CharacterClassType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return RootOuterClass.getDescriptor().getEnumTypes().get(7);
    }

    private static final CharacterClassType[] VALUES = values();

    public static CharacterClassType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private CharacterClassType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:CharacterClassType)
  }

  /**
   * Protobuf enum {@code TokenType}
   */
  public enum TokenType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>Flag = 0;</code>
     */
    Flag(0),
    /**
     * <code>Substitution = 1;</code>
     */
    Substitution(1),
    /**
     * <code>QuantifierModifier = 2;</code>
     */
    QuantifierModifier(2),
    /**
     * <code>Anchor = 3;</code>
     */
    Anchor(3),
    /**
     * <code>GroupReference = 4;</code>
     */
    GroupReference(4),
    /**
     * <code>Character = 5;</code>
     */
    Character(5),
    /**
     * <code>Lookaround = 6;</code>
     */
    Lookaround(6),
    /**
     * <code>Escape = 7;</code>
     */
    Escape(7),
    /**
     * <code>CharacterClass = 8;</code>
     */
    CharacterClass(8),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>Flag = 0;</code>
     */
    public static final int Flag_VALUE = 0;
    /**
     * <code>Substitution = 1;</code>
     */
    public static final int Substitution_VALUE = 1;
    /**
     * <code>QuantifierModifier = 2;</code>
     */
    public static final int QuantifierModifier_VALUE = 2;
    /**
     * <code>Anchor = 3;</code>
     */
    public static final int Anchor_VALUE = 3;
    /**
     * <code>GroupReference = 4;</code>
     */
    public static final int GroupReference_VALUE = 4;
    /**
     * <code>Character = 5;</code>
     */
    public static final int Character_VALUE = 5;
    /**
     * <code>Lookaround = 6;</code>
     */
    public static final int Lookaround_VALUE = 6;
    /**
     * <code>Escape = 7;</code>
     */
    public static final int Escape_VALUE = 7;
    /**
     * <code>CharacterClass = 8;</code>
     */
    public static final int CharacterClass_VALUE = 8;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TokenType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static TokenType forNumber(int value) {
      switch (value) {
        case 0: return Flag;
        case 1: return Substitution;
        case 2: return QuantifierModifier;
        case 3: return Anchor;
        case 4: return GroupReference;
        case 5: return Character;
        case 6: return Lookaround;
        case 7: return Escape;
        case 8: return CharacterClass;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TokenType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TokenType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TokenType>() {
            public TokenType findValueByNumber(int number) {
              return TokenType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return RootOuterClass.getDescriptor().getEnumTypes().get(8);
    }

    private static final TokenType[] VALUES = values();

    public static TokenType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private TokenType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:TokenType)
  }

  /**
   * Protobuf enum {@code SupportedLanguage}
   */
  public enum SupportedLanguage
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>Python = 0;</code>
     */
    Python(0),
    /**
     * <code>JavaScript = 1;</code>
     */
    JavaScript(1),
    /**
     * <code>Java = 2;</code>
     */
    Java(2),
    /**
     * <code>Rust = 3;</code>
     */
    Rust(3),
    /**
     * <code>Golang = 4;</code>
     */
    Golang(4),
    /**
     * <code>PHP = 5;</code>
     */
    PHP(5),
    /**
     * <code>Ruby = 6;</code>
     */
    Ruby(6),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>Python = 0;</code>
     */
    public static final int Python_VALUE = 0;
    /**
     * <code>JavaScript = 1;</code>
     */
    public static final int JavaScript_VALUE = 1;
    /**
     * <code>Java = 2;</code>
     */
    public static final int Java_VALUE = 2;
    /**
     * <code>Rust = 3;</code>
     */
    public static final int Rust_VALUE = 3;
    /**
     * <code>Golang = 4;</code>
     */
    public static final int Golang_VALUE = 4;
    /**
     * <code>PHP = 5;</code>
     */
    public static final int PHP_VALUE = 5;
    /**
     * <code>Ruby = 6;</code>
     */
    public static final int Ruby_VALUE = 6;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static SupportedLanguage valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static SupportedLanguage forNumber(int value) {
      switch (value) {
        case 0: return Python;
        case 1: return JavaScript;
        case 2: return Java;
        case 3: return Rust;
        case 4: return Golang;
        case 5: return PHP;
        case 6: return Ruby;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SupportedLanguage>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        SupportedLanguage> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SupportedLanguage>() {
            public SupportedLanguage findValueByNumber(int number) {
              return SupportedLanguage.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return RootOuterClass.getDescriptor().getEnumTypes().get(9);
    }

    private static final SupportedLanguage[] VALUES = values();

    public static SupportedLanguage valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private SupportedLanguage(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:SupportedLanguage)
  }

  public interface TokenOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Token)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string token = 8;</code>
     * @return The token.
     */
    java.lang.String getToken();
    /**
     * <code>string token = 8;</code>
     * @return The bytes for token.
     */
    com.google.protobuf.ByteString
        getTokenBytes();

    /**
     * <code>.TokenType type = 9;</code>
     * @return The enum numeric value on the wire for type.
     */
    int getTypeValue();
    /**
     * <code>.TokenType type = 9;</code>
     * @return The type.
     */
    RootOuterClass.TokenType getType();

    /**
     * <code>.FlagType flag = 10;</code>
     * @return The enum numeric value on the wire for flag.
     */
    int getFlagValue();
    /**
     * <code>.FlagType flag = 10;</code>
     * @return The flag.
     */
    RootOuterClass.FlagType getFlag();

    /**
     * <code>.SubstitutionType substitution = 11;</code>
     * @return The enum numeric value on the wire for substitution.
     */
    int getSubstitutionValue();
    /**
     * <code>.SubstitutionType substitution = 11;</code>
     * @return The substitution.
     */
    RootOuterClass.SubstitutionType getSubstitution();

    /**
     * <code>.QuantifierModifierType quantifiermodifier = 12;</code>
     * @return The enum numeric value on the wire for quantifiermodifier.
     */
    int getQuantifiermodifierValue();
    /**
     * <code>.QuantifierModifierType quantifiermodifier = 12;</code>
     * @return The quantifiermodifier.
     */
    RootOuterClass.QuantifierModifierType getQuantifiermodifier();

    /**
     * <code>.AnchorType anchor = 13;</code>
     * @return The enum numeric value on the wire for anchor.
     */
    int getAnchorValue();
    /**
     * <code>.AnchorType anchor = 13;</code>
     * @return The anchor.
     */
    RootOuterClass.AnchorType getAnchor();

    /**
     * <code>string character = 14;</code>
     * @return The character.
     */
    java.lang.String getCharacter();
    /**
     * <code>string character = 14;</code>
     * @return The bytes for character.
     */
    com.google.protobuf.ByteString
        getCharacterBytes();

    /**
     * <code>.LookaroundType lookaround = 15;</code>
     * @return The enum numeric value on the wire for lookaround.
     */
    int getLookaroundValue();
    /**
     * <code>.LookaroundType lookaround = 15;</code>
     * @return The lookaround.
     */
    RootOuterClass.LookaroundType getLookaround();

    /**
     * <code>.EscapeType escape = 16;</code>
     * @return The enum numeric value on the wire for escape.
     */
    int getEscapeValue();
    /**
     * <code>.EscapeType escape = 16;</code>
     * @return The escape.
     */
    RootOuterClass.EscapeType getEscape();

    /**
     * <code>.GroupReferenceType groupref = 17;</code>
     * @return The enum numeric value on the wire for groupref.
     */
    int getGrouprefValue();
    /**
     * <code>.GroupReferenceType groupref = 17;</code>
     * @return The groupref.
     */
    RootOuterClass.GroupReferenceType getGroupref();

    /**
     * <code>.CharacterClassType characterclass = 18;</code>
     * @return The enum numeric value on the wire for characterclass.
     */
    int getCharacterclassValue();
    /**
     * <code>.CharacterClassType characterclass = 18;</code>
     * @return The characterclass.
     */
    RootOuterClass.CharacterClassType getCharacterclass();

    public RootOuterClass.Token.SubTypeCase getSubTypeCase();
  }
  /**
   * Protobuf type {@code Token}
   */
  public static final class Token extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Token)
      TokenOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Token.newBuilder() to construct.
    private Token(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Token() {
      token_ = "";
      type_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Token();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Token(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 66: {
              java.lang.String s = input.readStringRequireUtf8();

              token_ = s;
              break;
            }
            case 72: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            case 80: {
              int rawValue = input.readEnum();
              subTypeCase_ = 10;
              subType_ = rawValue;
              break;
            }
            case 88: {
              int rawValue = input.readEnum();
              subTypeCase_ = 11;
              subType_ = rawValue;
              break;
            }
            case 96: {
              int rawValue = input.readEnum();
              subTypeCase_ = 12;
              subType_ = rawValue;
              break;
            }
            case 104: {
              int rawValue = input.readEnum();
              subTypeCase_ = 13;
              subType_ = rawValue;
              break;
            }
            case 114: {
              java.lang.String s = input.readStringRequireUtf8();
              subTypeCase_ = 14;
              subType_ = s;
              break;
            }
            case 120: {
              int rawValue = input.readEnum();
              subTypeCase_ = 15;
              subType_ = rawValue;
              break;
            }
            case 128: {
              int rawValue = input.readEnum();
              subTypeCase_ = 16;
              subType_ = rawValue;
              break;
            }
            case 136: {
              int rawValue = input.readEnum();
              subTypeCase_ = 17;
              subType_ = rawValue;
              break;
            }
            case 144: {
              int rawValue = input.readEnum();
              subTypeCase_ = 18;
              subType_ = rawValue;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return RootOuterClass.internal_static_Token_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return RootOuterClass.internal_static_Token_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              RootOuterClass.Token.class, RootOuterClass.Token.Builder.class);
    }

    private int subTypeCase_ = 0;
    private java.lang.Object subType_;
    public enum SubTypeCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      FLAG(10),
      SUBSTITUTION(11),
      QUANTIFIERMODIFIER(12),
      ANCHOR(13),
      CHARACTER(14),
      LOOKAROUND(15),
      ESCAPE(16),
      GROUPREF(17),
      CHARACTERCLASS(18),
      SUBTYPE_NOT_SET(0);
      private final int value;
      private SubTypeCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static SubTypeCase valueOf(int value) {
        return forNumber(value);
      }

      public static SubTypeCase forNumber(int value) {
        switch (value) {
          case 10: return FLAG;
          case 11: return SUBSTITUTION;
          case 12: return QUANTIFIERMODIFIER;
          case 13: return ANCHOR;
          case 14: return CHARACTER;
          case 15: return LOOKAROUND;
          case 16: return ESCAPE;
          case 17: return GROUPREF;
          case 18: return CHARACTERCLASS;
          case 0: return SUBTYPE_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public SubTypeCase
    getSubTypeCase() {
      return SubTypeCase.forNumber(
          subTypeCase_);
    }

    public static final int TOKEN_FIELD_NUMBER = 8;
    private volatile java.lang.Object token_;
    /**
     * <code>string token = 8;</code>
     * @return The token.
     */
    @java.lang.Override
    public java.lang.String getToken() {
      java.lang.Object ref = token_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        token_ = s;
        return s;
      }
    }
    /**
     * <code>string token = 8;</code>
     * @return The bytes for token.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTokenBytes() {
      java.lang.Object ref = token_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        token_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TYPE_FIELD_NUMBER = 9;
    private int type_;
    /**
     * <code>.TokenType type = 9;</code>
     * @return The enum numeric value on the wire for type.
     */
    @java.lang.Override public int getTypeValue() {
      return type_;
    }
    /**
     * <code>.TokenType type = 9;</code>
     * @return The type.
     */
    @java.lang.Override public RootOuterClass.TokenType getType() {
      @SuppressWarnings("deprecation")
      RootOuterClass.TokenType result = RootOuterClass.TokenType.valueOf(type_);
      return result == null ? RootOuterClass.TokenType.UNRECOGNIZED : result;
    }

    public static final int FLAG_FIELD_NUMBER = 10;
    /**
     * <code>.FlagType flag = 10;</code>
     * @return The enum numeric value on the wire for flag.
     */
    public int getFlagValue() {
      if (subTypeCase_ == 10) {
        return (java.lang.Integer) subType_;
      }
      return 0;
    }
    /**
     * <code>.FlagType flag = 10;</code>
     * @return The flag.
     */
    public RootOuterClass.FlagType getFlag() {
      if (subTypeCase_ == 10) {
        @SuppressWarnings("deprecation")
        RootOuterClass.FlagType result = RootOuterClass.FlagType.valueOf(
            (java.lang.Integer) subType_);
        return result == null ? RootOuterClass.FlagType.UNRECOGNIZED : result;
      }
      return RootOuterClass.FlagType.Ignore;
    }

    public static final int SUBSTITUTION_FIELD_NUMBER = 11;
    /**
     * <code>.SubstitutionType substitution = 11;</code>
     * @return The enum numeric value on the wire for substitution.
     */
    public int getSubstitutionValue() {
      if (subTypeCase_ == 11) {
        return (java.lang.Integer) subType_;
      }
      return 0;
    }
    /**
     * <code>.SubstitutionType substitution = 11;</code>
     * @return The substitution.
     */
    public RootOuterClass.SubstitutionType getSubstitution() {
      if (subTypeCase_ == 11) {
        @SuppressWarnings("deprecation")
        RootOuterClass.SubstitutionType result = RootOuterClass.SubstitutionType.valueOf(
            (java.lang.Integer) subType_);
        return result == null ? RootOuterClass.SubstitutionType.UNRECOGNIZED : result;
      }
      return RootOuterClass.SubstitutionType.Match;
    }

    public static final int QUANTIFIERMODIFIER_FIELD_NUMBER = 12;
    /**
     * <code>.QuantifierModifierType quantifiermodifier = 12;</code>
     * @return The enum numeric value on the wire for quantifiermodifier.
     */
    public int getQuantifiermodifierValue() {
      if (subTypeCase_ == 12) {
        return (java.lang.Integer) subType_;
      }
      return 0;
    }
    /**
     * <code>.QuantifierModifierType quantifiermodifier = 12;</code>
     * @return The quantifiermodifier.
     */
    public RootOuterClass.QuantifierModifierType getQuantifiermodifier() {
      if (subTypeCase_ == 12) {
        @SuppressWarnings("deprecation")
        RootOuterClass.QuantifierModifierType result = RootOuterClass.QuantifierModifierType.valueOf(
            (java.lang.Integer) subType_);
        return result == null ? RootOuterClass.QuantifierModifierType.UNRECOGNIZED : result;
      }
      return RootOuterClass.QuantifierModifierType.Plus;
    }

    public static final int ANCHOR_FIELD_NUMBER = 13;
    /**
     * <code>.AnchorType anchor = 13;</code>
     * @return The enum numeric value on the wire for anchor.
     */
    public int getAnchorValue() {
      if (subTypeCase_ == 13) {
        return (java.lang.Integer) subType_;
      }
      return 0;
    }
    /**
     * <code>.AnchorType anchor = 13;</code>
     * @return The anchor.
     */
    public RootOuterClass.AnchorType getAnchor() {
      if (subTypeCase_ == 13) {
        @SuppressWarnings("deprecation")
        RootOuterClass.AnchorType result = RootOuterClass.AnchorType.valueOf(
            (java.lang.Integer) subType_);
        return result == null ? RootOuterClass.AnchorType.UNRECOGNIZED : result;
      }
      return RootOuterClass.AnchorType.Beginning;
    }

    public static final int CHARACTER_FIELD_NUMBER = 14;
    /**
     * <code>string character = 14;</code>
     * @return The character.
     */
    public java.lang.String getCharacter() {
      java.lang.Object ref = "";
      if (subTypeCase_ == 14) {
        ref = subType_;
      }
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (subTypeCase_ == 14) {
          subType_ = s;
        }
        return s;
      }
    }
    /**
     * <code>string character = 14;</code>
     * @return The bytes for character.
     */
    public com.google.protobuf.ByteString
        getCharacterBytes() {
      java.lang.Object ref = "";
      if (subTypeCase_ == 14) {
        ref = subType_;
      }
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (subTypeCase_ == 14) {
          subType_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LOOKAROUND_FIELD_NUMBER = 15;
    /**
     * <code>.LookaroundType lookaround = 15;</code>
     * @return The enum numeric value on the wire for lookaround.
     */
    public int getLookaroundValue() {
      if (subTypeCase_ == 15) {
        return (java.lang.Integer) subType_;
      }
      return 0;
    }
    /**
     * <code>.LookaroundType lookaround = 15;</code>
     * @return The lookaround.
     */
    public RootOuterClass.LookaroundType getLookaround() {
      if (subTypeCase_ == 15) {
        @SuppressWarnings("deprecation")
        RootOuterClass.LookaroundType result = RootOuterClass.LookaroundType.valueOf(
            (java.lang.Integer) subType_);
        return result == null ? RootOuterClass.LookaroundType.UNRECOGNIZED : result;
      }
      return RootOuterClass.LookaroundType.PositiveLookahead;
    }

    public static final int ESCAPE_FIELD_NUMBER = 16;
    /**
     * <code>.EscapeType escape = 16;</code>
     * @return The enum numeric value on the wire for escape.
     */
    public int getEscapeValue() {
      if (subTypeCase_ == 16) {
        return (java.lang.Integer) subType_;
      }
      return 0;
    }
    /**
     * <code>.EscapeType escape = 16;</code>
     * @return The escape.
     */
    public RootOuterClass.EscapeType getEscape() {
      if (subTypeCase_ == 16) {
        @SuppressWarnings("deprecation")
        RootOuterClass.EscapeType result = RootOuterClass.EscapeType.valueOf(
            (java.lang.Integer) subType_);
        return result == null ? RootOuterClass.EscapeType.UNRECOGNIZED : result;
      }
      return RootOuterClass.EscapeType.UnicodeEscape;
    }

    public static final int GROUPREF_FIELD_NUMBER = 17;
    /**
     * <code>.GroupReferenceType groupref = 17;</code>
     * @return The enum numeric value on the wire for groupref.
     */
    public int getGrouprefValue() {
      if (subTypeCase_ == 17) {
        return (java.lang.Integer) subType_;
      }
      return 0;
    }
    /**
     * <code>.GroupReferenceType groupref = 17;</code>
     * @return The groupref.
     */
    public RootOuterClass.GroupReferenceType getGroupref() {
      if (subTypeCase_ == 17) {
        @SuppressWarnings("deprecation")
        RootOuterClass.GroupReferenceType result = RootOuterClass.GroupReferenceType.valueOf(
            (java.lang.Integer) subType_);
        return result == null ? RootOuterClass.GroupReferenceType.UNRECOGNIZED : result;
      }
      return RootOuterClass.GroupReferenceType.OpenCapture;
    }

    public static final int CHARACTERCLASS_FIELD_NUMBER = 18;
    /**
     * <code>.CharacterClassType characterclass = 18;</code>
     * @return The enum numeric value on the wire for characterclass.
     */
    public int getCharacterclassValue() {
      if (subTypeCase_ == 18) {
        return (java.lang.Integer) subType_;
      }
      return 0;
    }
    /**
     * <code>.CharacterClassType characterclass = 18;</code>
     * @return The characterclass.
     */
    public RootOuterClass.CharacterClassType getCharacterclass() {
      if (subTypeCase_ == 18) {
        @SuppressWarnings("deprecation")
        RootOuterClass.CharacterClassType result = RootOuterClass.CharacterClassType.valueOf(
            (java.lang.Integer) subType_);
        return result == null ? RootOuterClass.CharacterClassType.UNRECOGNIZED : result;
      }
      return RootOuterClass.CharacterClassType.OpenSet;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getTokenBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, token_);
      }
      if (type_ != RootOuterClass.TokenType.Flag.getNumber()) {
        output.writeEnum(9, type_);
      }
      if (subTypeCase_ == 10) {
        output.writeEnum(10, ((java.lang.Integer) subType_));
      }
      if (subTypeCase_ == 11) {
        output.writeEnum(11, ((java.lang.Integer) subType_));
      }
      if (subTypeCase_ == 12) {
        output.writeEnum(12, ((java.lang.Integer) subType_));
      }
      if (subTypeCase_ == 13) {
        output.writeEnum(13, ((java.lang.Integer) subType_));
      }
      if (subTypeCase_ == 14) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 14, subType_);
      }
      if (subTypeCase_ == 15) {
        output.writeEnum(15, ((java.lang.Integer) subType_));
      }
      if (subTypeCase_ == 16) {
        output.writeEnum(16, ((java.lang.Integer) subType_));
      }
      if (subTypeCase_ == 17) {
        output.writeEnum(17, ((java.lang.Integer) subType_));
      }
      if (subTypeCase_ == 18) {
        output.writeEnum(18, ((java.lang.Integer) subType_));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getTokenBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, token_);
      }
      if (type_ != RootOuterClass.TokenType.Flag.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(9, type_);
      }
      if (subTypeCase_ == 10) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(10, ((java.lang.Integer) subType_));
      }
      if (subTypeCase_ == 11) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(11, ((java.lang.Integer) subType_));
      }
      if (subTypeCase_ == 12) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(12, ((java.lang.Integer) subType_));
      }
      if (subTypeCase_ == 13) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(13, ((java.lang.Integer) subType_));
      }
      if (subTypeCase_ == 14) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(14, subType_);
      }
      if (subTypeCase_ == 15) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(15, ((java.lang.Integer) subType_));
      }
      if (subTypeCase_ == 16) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(16, ((java.lang.Integer) subType_));
      }
      if (subTypeCase_ == 17) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(17, ((java.lang.Integer) subType_));
      }
      if (subTypeCase_ == 18) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(18, ((java.lang.Integer) subType_));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof RootOuterClass.Token)) {
        return super.equals(obj);
      }
      RootOuterClass.Token other = (RootOuterClass.Token) obj;

      if (!getToken()
          .equals(other.getToken())) return false;
      if (type_ != other.type_) return false;
      if (!getSubTypeCase().equals(other.getSubTypeCase())) return false;
      switch (subTypeCase_) {
        case 10:
          if (getFlagValue()
              != other.getFlagValue()) return false;
          break;
        case 11:
          if (getSubstitutionValue()
              != other.getSubstitutionValue()) return false;
          break;
        case 12:
          if (getQuantifiermodifierValue()
              != other.getQuantifiermodifierValue()) return false;
          break;
        case 13:
          if (getAnchorValue()
              != other.getAnchorValue()) return false;
          break;
        case 14:
          if (!getCharacter()
              .equals(other.getCharacter())) return false;
          break;
        case 15:
          if (getLookaroundValue()
              != other.getLookaroundValue()) return false;
          break;
        case 16:
          if (getEscapeValue()
              != other.getEscapeValue()) return false;
          break;
        case 17:
          if (getGrouprefValue()
              != other.getGrouprefValue()) return false;
          break;
        case 18:
          if (getCharacterclassValue()
              != other.getCharacterclassValue()) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TOKEN_FIELD_NUMBER;
      hash = (53 * hash) + getToken().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      switch (subTypeCase_) {
        case 10:
          hash = (37 * hash) + FLAG_FIELD_NUMBER;
          hash = (53 * hash) + getFlagValue();
          break;
        case 11:
          hash = (37 * hash) + SUBSTITUTION_FIELD_NUMBER;
          hash = (53 * hash) + getSubstitutionValue();
          break;
        case 12:
          hash = (37 * hash) + QUANTIFIERMODIFIER_FIELD_NUMBER;
          hash = (53 * hash) + getQuantifiermodifierValue();
          break;
        case 13:
          hash = (37 * hash) + ANCHOR_FIELD_NUMBER;
          hash = (53 * hash) + getAnchorValue();
          break;
        case 14:
          hash = (37 * hash) + CHARACTER_FIELD_NUMBER;
          hash = (53 * hash) + getCharacter().hashCode();
          break;
        case 15:
          hash = (37 * hash) + LOOKAROUND_FIELD_NUMBER;
          hash = (53 * hash) + getLookaroundValue();
          break;
        case 16:
          hash = (37 * hash) + ESCAPE_FIELD_NUMBER;
          hash = (53 * hash) + getEscapeValue();
          break;
        case 17:
          hash = (37 * hash) + GROUPREF_FIELD_NUMBER;
          hash = (53 * hash) + getGrouprefValue();
          break;
        case 18:
          hash = (37 * hash) + CHARACTERCLASS_FIELD_NUMBER;
          hash = (53 * hash) + getCharacterclassValue();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static RootOuterClass.Token parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RootOuterClass.Token parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RootOuterClass.Token parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RootOuterClass.Token parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RootOuterClass.Token parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RootOuterClass.Token parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RootOuterClass.Token parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RootOuterClass.Token parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static RootOuterClass.Token parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static RootOuterClass.Token parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static RootOuterClass.Token parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RootOuterClass.Token parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(RootOuterClass.Token prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Token}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Token)
        RootOuterClass.TokenOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return RootOuterClass.internal_static_Token_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return RootOuterClass.internal_static_Token_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                RootOuterClass.Token.class, RootOuterClass.Token.Builder.class);
      }

      // Construct using RootOuterClass.Token.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        token_ = "";

        type_ = 0;

        subTypeCase_ = 0;
        subType_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return RootOuterClass.internal_static_Token_descriptor;
      }

      @java.lang.Override
      public RootOuterClass.Token getDefaultInstanceForType() {
        return RootOuterClass.Token.getDefaultInstance();
      }

      @java.lang.Override
      public RootOuterClass.Token build() {
        RootOuterClass.Token result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public RootOuterClass.Token buildPartial() {
        RootOuterClass.Token result = new RootOuterClass.Token(this);
        result.token_ = token_;
        result.type_ = type_;
        if (subTypeCase_ == 10) {
          result.subType_ = subType_;
        }
        if (subTypeCase_ == 11) {
          result.subType_ = subType_;
        }
        if (subTypeCase_ == 12) {
          result.subType_ = subType_;
        }
        if (subTypeCase_ == 13) {
          result.subType_ = subType_;
        }
        if (subTypeCase_ == 14) {
          result.subType_ = subType_;
        }
        if (subTypeCase_ == 15) {
          result.subType_ = subType_;
        }
        if (subTypeCase_ == 16) {
          result.subType_ = subType_;
        }
        if (subTypeCase_ == 17) {
          result.subType_ = subType_;
        }
        if (subTypeCase_ == 18) {
          result.subType_ = subType_;
        }
        result.subTypeCase_ = subTypeCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof RootOuterClass.Token) {
          return mergeFrom((RootOuterClass.Token)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(RootOuterClass.Token other) {
        if (other == RootOuterClass.Token.getDefaultInstance()) return this;
        if (!other.getToken().isEmpty()) {
          token_ = other.token_;
          onChanged();
        }
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        switch (other.getSubTypeCase()) {
          case FLAG: {
            setFlagValue(other.getFlagValue());
            break;
          }
          case SUBSTITUTION: {
            setSubstitutionValue(other.getSubstitutionValue());
            break;
          }
          case QUANTIFIERMODIFIER: {
            setQuantifiermodifierValue(other.getQuantifiermodifierValue());
            break;
          }
          case ANCHOR: {
            setAnchorValue(other.getAnchorValue());
            break;
          }
          case CHARACTER: {
            subTypeCase_ = 14;
            subType_ = other.subType_;
            onChanged();
            break;
          }
          case LOOKAROUND: {
            setLookaroundValue(other.getLookaroundValue());
            break;
          }
          case ESCAPE: {
            setEscapeValue(other.getEscapeValue());
            break;
          }
          case GROUPREF: {
            setGrouprefValue(other.getGrouprefValue());
            break;
          }
          case CHARACTERCLASS: {
            setCharacterclassValue(other.getCharacterclassValue());
            break;
          }
          case SUBTYPE_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        RootOuterClass.Token parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (RootOuterClass.Token) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int subTypeCase_ = 0;
      private java.lang.Object subType_;
      public SubTypeCase
          getSubTypeCase() {
        return SubTypeCase.forNumber(
            subTypeCase_);
      }

      public Builder clearSubType() {
        subTypeCase_ = 0;
        subType_ = null;
        onChanged();
        return this;
      }


      private java.lang.Object token_ = "";
      /**
       * <code>string token = 8;</code>
       * @return The token.
       */
      public java.lang.String getToken() {
        java.lang.Object ref = token_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          token_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string token = 8;</code>
       * @return The bytes for token.
       */
      public com.google.protobuf.ByteString
          getTokenBytes() {
        java.lang.Object ref = token_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          token_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string token = 8;</code>
       * @param value The token to set.
       * @return This builder for chaining.
       */
      public Builder setToken(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        token_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string token = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearToken() {
        
        token_ = getDefaultInstance().getToken();
        onChanged();
        return this;
      }
      /**
       * <code>string token = 8;</code>
       * @param value The bytes for token to set.
       * @return This builder for chaining.
       */
      public Builder setTokenBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        token_ = value;
        onChanged();
        return this;
      }

      private int type_ = 0;
      /**
       * <code>.TokenType type = 9;</code>
       * @return The enum numeric value on the wire for type.
       */
      @java.lang.Override public int getTypeValue() {
        return type_;
      }
      /**
       * <code>.TokenType type = 9;</code>
       * @param value The enum numeric value on the wire for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeValue(int value) {
        
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.TokenType type = 9;</code>
       * @return The type.
       */
      @java.lang.Override
      public RootOuterClass.TokenType getType() {
        @SuppressWarnings("deprecation")
        RootOuterClass.TokenType result = RootOuterClass.TokenType.valueOf(type_);
        return result == null ? RootOuterClass.TokenType.UNRECOGNIZED : result;
      }
      /**
       * <code>.TokenType type = 9;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(RootOuterClass.TokenType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.TokenType type = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      /**
       * <code>.FlagType flag = 10;</code>
       * @return The enum numeric value on the wire for flag.
       */
      @java.lang.Override
      public int getFlagValue() {
        if (subTypeCase_ == 10) {
          return ((java.lang.Integer) subType_).intValue();
        }
        return 0;
      }
      /**
       * <code>.FlagType flag = 10;</code>
       * @param value The enum numeric value on the wire for flag to set.
       * @return This builder for chaining.
       */
      public Builder setFlagValue(int value) {
        subTypeCase_ = 10;
        subType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.FlagType flag = 10;</code>
       * @return The flag.
       */
      @java.lang.Override
      public RootOuterClass.FlagType getFlag() {
        if (subTypeCase_ == 10) {
          @SuppressWarnings("deprecation")
          RootOuterClass.FlagType result = RootOuterClass.FlagType.valueOf(
              (java.lang.Integer) subType_);
          return result == null ? RootOuterClass.FlagType.UNRECOGNIZED : result;
        }
        return RootOuterClass.FlagType.Ignore;
      }
      /**
       * <code>.FlagType flag = 10;</code>
       * @param value The flag to set.
       * @return This builder for chaining.
       */
      public Builder setFlag(RootOuterClass.FlagType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        subTypeCase_ = 10;
        subType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.FlagType flag = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearFlag() {
        if (subTypeCase_ == 10) {
          subTypeCase_ = 0;
          subType_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>.SubstitutionType substitution = 11;</code>
       * @return The enum numeric value on the wire for substitution.
       */
      @java.lang.Override
      public int getSubstitutionValue() {
        if (subTypeCase_ == 11) {
          return ((java.lang.Integer) subType_).intValue();
        }
        return 0;
      }
      /**
       * <code>.SubstitutionType substitution = 11;</code>
       * @param value The enum numeric value on the wire for substitution to set.
       * @return This builder for chaining.
       */
      public Builder setSubstitutionValue(int value) {
        subTypeCase_ = 11;
        subType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.SubstitutionType substitution = 11;</code>
       * @return The substitution.
       */
      @java.lang.Override
      public RootOuterClass.SubstitutionType getSubstitution() {
        if (subTypeCase_ == 11) {
          @SuppressWarnings("deprecation")
          RootOuterClass.SubstitutionType result = RootOuterClass.SubstitutionType.valueOf(
              (java.lang.Integer) subType_);
          return result == null ? RootOuterClass.SubstitutionType.UNRECOGNIZED : result;
        }
        return RootOuterClass.SubstitutionType.Match;
      }
      /**
       * <code>.SubstitutionType substitution = 11;</code>
       * @param value The substitution to set.
       * @return This builder for chaining.
       */
      public Builder setSubstitution(RootOuterClass.SubstitutionType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        subTypeCase_ = 11;
        subType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.SubstitutionType substitution = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearSubstitution() {
        if (subTypeCase_ == 11) {
          subTypeCase_ = 0;
          subType_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>.QuantifierModifierType quantifiermodifier = 12;</code>
       * @return The enum numeric value on the wire for quantifiermodifier.
       */
      @java.lang.Override
      public int getQuantifiermodifierValue() {
        if (subTypeCase_ == 12) {
          return ((java.lang.Integer) subType_).intValue();
        }
        return 0;
      }
      /**
       * <code>.QuantifierModifierType quantifiermodifier = 12;</code>
       * @param value The enum numeric value on the wire for quantifiermodifier to set.
       * @return This builder for chaining.
       */
      public Builder setQuantifiermodifierValue(int value) {
        subTypeCase_ = 12;
        subType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.QuantifierModifierType quantifiermodifier = 12;</code>
       * @return The quantifiermodifier.
       */
      @java.lang.Override
      public RootOuterClass.QuantifierModifierType getQuantifiermodifier() {
        if (subTypeCase_ == 12) {
          @SuppressWarnings("deprecation")
          RootOuterClass.QuantifierModifierType result = RootOuterClass.QuantifierModifierType.valueOf(
              (java.lang.Integer) subType_);
          return result == null ? RootOuterClass.QuantifierModifierType.UNRECOGNIZED : result;
        }
        return RootOuterClass.QuantifierModifierType.Plus;
      }
      /**
       * <code>.QuantifierModifierType quantifiermodifier = 12;</code>
       * @param value The quantifiermodifier to set.
       * @return This builder for chaining.
       */
      public Builder setQuantifiermodifier(RootOuterClass.QuantifierModifierType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        subTypeCase_ = 12;
        subType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.QuantifierModifierType quantifiermodifier = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearQuantifiermodifier() {
        if (subTypeCase_ == 12) {
          subTypeCase_ = 0;
          subType_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>.AnchorType anchor = 13;</code>
       * @return The enum numeric value on the wire for anchor.
       */
      @java.lang.Override
      public int getAnchorValue() {
        if (subTypeCase_ == 13) {
          return ((java.lang.Integer) subType_).intValue();
        }
        return 0;
      }
      /**
       * <code>.AnchorType anchor = 13;</code>
       * @param value The enum numeric value on the wire for anchor to set.
       * @return This builder for chaining.
       */
      public Builder setAnchorValue(int value) {
        subTypeCase_ = 13;
        subType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.AnchorType anchor = 13;</code>
       * @return The anchor.
       */
      @java.lang.Override
      public RootOuterClass.AnchorType getAnchor() {
        if (subTypeCase_ == 13) {
          @SuppressWarnings("deprecation")
          RootOuterClass.AnchorType result = RootOuterClass.AnchorType.valueOf(
              (java.lang.Integer) subType_);
          return result == null ? RootOuterClass.AnchorType.UNRECOGNIZED : result;
        }
        return RootOuterClass.AnchorType.Beginning;
      }
      /**
       * <code>.AnchorType anchor = 13;</code>
       * @param value The anchor to set.
       * @return This builder for chaining.
       */
      public Builder setAnchor(RootOuterClass.AnchorType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        subTypeCase_ = 13;
        subType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.AnchorType anchor = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearAnchor() {
        if (subTypeCase_ == 13) {
          subTypeCase_ = 0;
          subType_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>string character = 14;</code>
       * @return The character.
       */
      @java.lang.Override
      public java.lang.String getCharacter() {
        java.lang.Object ref = "";
        if (subTypeCase_ == 14) {
          ref = subType_;
        }
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (subTypeCase_ == 14) {
            subType_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string character = 14;</code>
       * @return The bytes for character.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getCharacterBytes() {
        java.lang.Object ref = "";
        if (subTypeCase_ == 14) {
          ref = subType_;
        }
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          if (subTypeCase_ == 14) {
            subType_ = b;
          }
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string character = 14;</code>
       * @param value The character to set.
       * @return This builder for chaining.
       */
      public Builder setCharacter(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  subTypeCase_ = 14;
        subType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string character = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearCharacter() {
        if (subTypeCase_ == 14) {
          subTypeCase_ = 0;
          subType_ = null;
          onChanged();
        }
        return this;
      }
      /**
       * <code>string character = 14;</code>
       * @param value The bytes for character to set.
       * @return This builder for chaining.
       */
      public Builder setCharacterBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        subTypeCase_ = 14;
        subType_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>.LookaroundType lookaround = 15;</code>
       * @return The enum numeric value on the wire for lookaround.
       */
      @java.lang.Override
      public int getLookaroundValue() {
        if (subTypeCase_ == 15) {
          return ((java.lang.Integer) subType_).intValue();
        }
        return 0;
      }
      /**
       * <code>.LookaroundType lookaround = 15;</code>
       * @param value The enum numeric value on the wire for lookaround to set.
       * @return This builder for chaining.
       */
      public Builder setLookaroundValue(int value) {
        subTypeCase_ = 15;
        subType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.LookaroundType lookaround = 15;</code>
       * @return The lookaround.
       */
      @java.lang.Override
      public RootOuterClass.LookaroundType getLookaround() {
        if (subTypeCase_ == 15) {
          @SuppressWarnings("deprecation")
          RootOuterClass.LookaroundType result = RootOuterClass.LookaroundType.valueOf(
              (java.lang.Integer) subType_);
          return result == null ? RootOuterClass.LookaroundType.UNRECOGNIZED : result;
        }
        return RootOuterClass.LookaroundType.PositiveLookahead;
      }
      /**
       * <code>.LookaroundType lookaround = 15;</code>
       * @param value The lookaround to set.
       * @return This builder for chaining.
       */
      public Builder setLookaround(RootOuterClass.LookaroundType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        subTypeCase_ = 15;
        subType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.LookaroundType lookaround = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearLookaround() {
        if (subTypeCase_ == 15) {
          subTypeCase_ = 0;
          subType_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>.EscapeType escape = 16;</code>
       * @return The enum numeric value on the wire for escape.
       */
      @java.lang.Override
      public int getEscapeValue() {
        if (subTypeCase_ == 16) {
          return ((java.lang.Integer) subType_).intValue();
        }
        return 0;
      }
      /**
       * <code>.EscapeType escape = 16;</code>
       * @param value The enum numeric value on the wire for escape to set.
       * @return This builder for chaining.
       */
      public Builder setEscapeValue(int value) {
        subTypeCase_ = 16;
        subType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.EscapeType escape = 16;</code>
       * @return The escape.
       */
      @java.lang.Override
      public RootOuterClass.EscapeType getEscape() {
        if (subTypeCase_ == 16) {
          @SuppressWarnings("deprecation")
          RootOuterClass.EscapeType result = RootOuterClass.EscapeType.valueOf(
              (java.lang.Integer) subType_);
          return result == null ? RootOuterClass.EscapeType.UNRECOGNIZED : result;
        }
        return RootOuterClass.EscapeType.UnicodeEscape;
      }
      /**
       * <code>.EscapeType escape = 16;</code>
       * @param value The escape to set.
       * @return This builder for chaining.
       */
      public Builder setEscape(RootOuterClass.EscapeType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        subTypeCase_ = 16;
        subType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.EscapeType escape = 16;</code>
       * @return This builder for chaining.
       */
      public Builder clearEscape() {
        if (subTypeCase_ == 16) {
          subTypeCase_ = 0;
          subType_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>.GroupReferenceType groupref = 17;</code>
       * @return The enum numeric value on the wire for groupref.
       */
      @java.lang.Override
      public int getGrouprefValue() {
        if (subTypeCase_ == 17) {
          return ((java.lang.Integer) subType_).intValue();
        }
        return 0;
      }
      /**
       * <code>.GroupReferenceType groupref = 17;</code>
       * @param value The enum numeric value on the wire for groupref to set.
       * @return This builder for chaining.
       */
      public Builder setGrouprefValue(int value) {
        subTypeCase_ = 17;
        subType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.GroupReferenceType groupref = 17;</code>
       * @return The groupref.
       */
      @java.lang.Override
      public RootOuterClass.GroupReferenceType getGroupref() {
        if (subTypeCase_ == 17) {
          @SuppressWarnings("deprecation")
          RootOuterClass.GroupReferenceType result = RootOuterClass.GroupReferenceType.valueOf(
              (java.lang.Integer) subType_);
          return result == null ? RootOuterClass.GroupReferenceType.UNRECOGNIZED : result;
        }
        return RootOuterClass.GroupReferenceType.OpenCapture;
      }
      /**
       * <code>.GroupReferenceType groupref = 17;</code>
       * @param value The groupref to set.
       * @return This builder for chaining.
       */
      public Builder setGroupref(RootOuterClass.GroupReferenceType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        subTypeCase_ = 17;
        subType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.GroupReferenceType groupref = 17;</code>
       * @return This builder for chaining.
       */
      public Builder clearGroupref() {
        if (subTypeCase_ == 17) {
          subTypeCase_ = 0;
          subType_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>.CharacterClassType characterclass = 18;</code>
       * @return The enum numeric value on the wire for characterclass.
       */
      @java.lang.Override
      public int getCharacterclassValue() {
        if (subTypeCase_ == 18) {
          return ((java.lang.Integer) subType_).intValue();
        }
        return 0;
      }
      /**
       * <code>.CharacterClassType characterclass = 18;</code>
       * @param value The enum numeric value on the wire for characterclass to set.
       * @return This builder for chaining.
       */
      public Builder setCharacterclassValue(int value) {
        subTypeCase_ = 18;
        subType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.CharacterClassType characterclass = 18;</code>
       * @return The characterclass.
       */
      @java.lang.Override
      public RootOuterClass.CharacterClassType getCharacterclass() {
        if (subTypeCase_ == 18) {
          @SuppressWarnings("deprecation")
          RootOuterClass.CharacterClassType result = RootOuterClass.CharacterClassType.valueOf(
              (java.lang.Integer) subType_);
          return result == null ? RootOuterClass.CharacterClassType.UNRECOGNIZED : result;
        }
        return RootOuterClass.CharacterClassType.OpenSet;
      }
      /**
       * <code>.CharacterClassType characterclass = 18;</code>
       * @param value The characterclass to set.
       * @return This builder for chaining.
       */
      public Builder setCharacterclass(RootOuterClass.CharacterClassType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        subTypeCase_ = 18;
        subType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.CharacterClassType characterclass = 18;</code>
       * @return This builder for chaining.
       */
      public Builder clearCharacterclass() {
        if (subTypeCase_ == 18) {
          subTypeCase_ = 0;
          subType_ = null;
          onChanged();
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Token)
    }

    // @@protoc_insertion_point(class_scope:Token)
    private static final RootOuterClass.Token DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new RootOuterClass.Token();
    }

    public static RootOuterClass.Token getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Token>
        PARSER = new com.google.protobuf.AbstractParser<Token>() {
      @java.lang.Override
      public Token parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Token(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Token> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Token> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public RootOuterClass.Token getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ExpressionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Expression)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string raw = 5;</code>
     * @return The raw.
     */
    java.lang.String getRaw();
    /**
     * <code>string raw = 5;</code>
     * @return The bytes for raw.
     */
    com.google.protobuf.ByteString
        getRawBytes();

    /**
     * <code>repeated .Token tokens = 6;</code>
     */
    java.util.List<RootOuterClass.Token> 
        getTokensList();
    /**
     * <code>repeated .Token tokens = 6;</code>
     */
    RootOuterClass.Token getTokens(int index);
    /**
     * <code>repeated .Token tokens = 6;</code>
     */
    int getTokensCount();
    /**
     * <code>repeated .Token tokens = 6;</code>
     */
    java.util.List<? extends RootOuterClass.TokenOrBuilder> 
        getTokensOrBuilderList();
    /**
     * <code>repeated .Token tokens = 6;</code>
     */
    RootOuterClass.TokenOrBuilder getTokensOrBuilder(
        int index);

    /**
     * <code>repeated .Expression expressions = 7;</code>
     */
    java.util.List<RootOuterClass.Expression> 
        getExpressionsList();
    /**
     * <code>repeated .Expression expressions = 7;</code>
     */
    RootOuterClass.Expression getExpressions(int index);
    /**
     * <code>repeated .Expression expressions = 7;</code>
     */
    int getExpressionsCount();
    /**
     * <code>repeated .Expression expressions = 7;</code>
     */
    java.util.List<? extends RootOuterClass.ExpressionOrBuilder> 
        getExpressionsOrBuilderList();
    /**
     * <code>repeated .Expression expressions = 7;</code>
     */
    RootOuterClass.ExpressionOrBuilder getExpressionsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code Expression}
   */
  public static final class Expression extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Expression)
      ExpressionOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Expression.newBuilder() to construct.
    private Expression(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Expression() {
      raw_ = "";
      tokens_ = java.util.Collections.emptyList();
      expressions_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Expression();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Expression(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              raw_ = s;
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                tokens_ = new java.util.ArrayList<RootOuterClass.Token>();
                mutable_bitField0_ |= 0x00000001;
              }
              tokens_.add(
                  input.readMessage(RootOuterClass.Token.parser(), extensionRegistry));
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                expressions_ = new java.util.ArrayList<RootOuterClass.Expression>();
                mutable_bitField0_ |= 0x00000002;
              }
              expressions_.add(
                  input.readMessage(RootOuterClass.Expression.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          tokens_ = java.util.Collections.unmodifiableList(tokens_);
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          expressions_ = java.util.Collections.unmodifiableList(expressions_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return RootOuterClass.internal_static_Expression_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return RootOuterClass.internal_static_Expression_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              RootOuterClass.Expression.class, RootOuterClass.Expression.Builder.class);
    }

    public static final int RAW_FIELD_NUMBER = 5;
    private volatile java.lang.Object raw_;
    /**
     * <code>string raw = 5;</code>
     * @return The raw.
     */
    @java.lang.Override
    public java.lang.String getRaw() {
      java.lang.Object ref = raw_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        raw_ = s;
        return s;
      }
    }
    /**
     * <code>string raw = 5;</code>
     * @return The bytes for raw.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getRawBytes() {
      java.lang.Object ref = raw_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        raw_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TOKENS_FIELD_NUMBER = 6;
    private java.util.List<RootOuterClass.Token> tokens_;
    /**
     * <code>repeated .Token tokens = 6;</code>
     */
    @java.lang.Override
    public java.util.List<RootOuterClass.Token> getTokensList() {
      return tokens_;
    }
    /**
     * <code>repeated .Token tokens = 6;</code>
     */
    @java.lang.Override
    public java.util.List<? extends RootOuterClass.TokenOrBuilder> 
        getTokensOrBuilderList() {
      return tokens_;
    }
    /**
     * <code>repeated .Token tokens = 6;</code>
     */
    @java.lang.Override
    public int getTokensCount() {
      return tokens_.size();
    }
    /**
     * <code>repeated .Token tokens = 6;</code>
     */
    @java.lang.Override
    public RootOuterClass.Token getTokens(int index) {
      return tokens_.get(index);
    }
    /**
     * <code>repeated .Token tokens = 6;</code>
     */
    @java.lang.Override
    public RootOuterClass.TokenOrBuilder getTokensOrBuilder(
        int index) {
      return tokens_.get(index);
    }

    public static final int EXPRESSIONS_FIELD_NUMBER = 7;
    private java.util.List<RootOuterClass.Expression> expressions_;
    /**
     * <code>repeated .Expression expressions = 7;</code>
     */
    @java.lang.Override
    public java.util.List<RootOuterClass.Expression> getExpressionsList() {
      return expressions_;
    }
    /**
     * <code>repeated .Expression expressions = 7;</code>
     */
    @java.lang.Override
    public java.util.List<? extends RootOuterClass.ExpressionOrBuilder> 
        getExpressionsOrBuilderList() {
      return expressions_;
    }
    /**
     * <code>repeated .Expression expressions = 7;</code>
     */
    @java.lang.Override
    public int getExpressionsCount() {
      return expressions_.size();
    }
    /**
     * <code>repeated .Expression expressions = 7;</code>
     */
    @java.lang.Override
    public RootOuterClass.Expression getExpressions(int index) {
      return expressions_.get(index);
    }
    /**
     * <code>repeated .Expression expressions = 7;</code>
     */
    @java.lang.Override
    public RootOuterClass.ExpressionOrBuilder getExpressionsOrBuilder(
        int index) {
      return expressions_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getRawBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, raw_);
      }
      for (int i = 0; i < tokens_.size(); i++) {
        output.writeMessage(6, tokens_.get(i));
      }
      for (int i = 0; i < expressions_.size(); i++) {
        output.writeMessage(7, expressions_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getRawBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, raw_);
      }
      for (int i = 0; i < tokens_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, tokens_.get(i));
      }
      for (int i = 0; i < expressions_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, expressions_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof RootOuterClass.Expression)) {
        return super.equals(obj);
      }
      RootOuterClass.Expression other = (RootOuterClass.Expression) obj;

      if (!getRaw()
          .equals(other.getRaw())) return false;
      if (!getTokensList()
          .equals(other.getTokensList())) return false;
      if (!getExpressionsList()
          .equals(other.getExpressionsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + RAW_FIELD_NUMBER;
      hash = (53 * hash) + getRaw().hashCode();
      if (getTokensCount() > 0) {
        hash = (37 * hash) + TOKENS_FIELD_NUMBER;
        hash = (53 * hash) + getTokensList().hashCode();
      }
      if (getExpressionsCount() > 0) {
        hash = (37 * hash) + EXPRESSIONS_FIELD_NUMBER;
        hash = (53 * hash) + getExpressionsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static RootOuterClass.Expression parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RootOuterClass.Expression parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RootOuterClass.Expression parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RootOuterClass.Expression parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RootOuterClass.Expression parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RootOuterClass.Expression parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RootOuterClass.Expression parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RootOuterClass.Expression parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static RootOuterClass.Expression parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static RootOuterClass.Expression parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static RootOuterClass.Expression parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RootOuterClass.Expression parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(RootOuterClass.Expression prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Expression}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Expression)
        RootOuterClass.ExpressionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return RootOuterClass.internal_static_Expression_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return RootOuterClass.internal_static_Expression_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                RootOuterClass.Expression.class, RootOuterClass.Expression.Builder.class);
      }

      // Construct using RootOuterClass.Expression.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getTokensFieldBuilder();
          getExpressionsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        raw_ = "";

        if (tokensBuilder_ == null) {
          tokens_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          tokensBuilder_.clear();
        }
        if (expressionsBuilder_ == null) {
          expressions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          expressionsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return RootOuterClass.internal_static_Expression_descriptor;
      }

      @java.lang.Override
      public RootOuterClass.Expression getDefaultInstanceForType() {
        return RootOuterClass.Expression.getDefaultInstance();
      }

      @java.lang.Override
      public RootOuterClass.Expression build() {
        RootOuterClass.Expression result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public RootOuterClass.Expression buildPartial() {
        RootOuterClass.Expression result = new RootOuterClass.Expression(this);
        int from_bitField0_ = bitField0_;
        result.raw_ = raw_;
        if (tokensBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            tokens_ = java.util.Collections.unmodifiableList(tokens_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.tokens_ = tokens_;
        } else {
          result.tokens_ = tokensBuilder_.build();
        }
        if (expressionsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            expressions_ = java.util.Collections.unmodifiableList(expressions_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.expressions_ = expressions_;
        } else {
          result.expressions_ = expressionsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof RootOuterClass.Expression) {
          return mergeFrom((RootOuterClass.Expression)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(RootOuterClass.Expression other) {
        if (other == RootOuterClass.Expression.getDefaultInstance()) return this;
        if (!other.getRaw().isEmpty()) {
          raw_ = other.raw_;
          onChanged();
        }
        if (tokensBuilder_ == null) {
          if (!other.tokens_.isEmpty()) {
            if (tokens_.isEmpty()) {
              tokens_ = other.tokens_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureTokensIsMutable();
              tokens_.addAll(other.tokens_);
            }
            onChanged();
          }
        } else {
          if (!other.tokens_.isEmpty()) {
            if (tokensBuilder_.isEmpty()) {
              tokensBuilder_.dispose();
              tokensBuilder_ = null;
              tokens_ = other.tokens_;
              bitField0_ = (bitField0_ & ~0x00000001);
              tokensBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getTokensFieldBuilder() : null;
            } else {
              tokensBuilder_.addAllMessages(other.tokens_);
            }
          }
        }
        if (expressionsBuilder_ == null) {
          if (!other.expressions_.isEmpty()) {
            if (expressions_.isEmpty()) {
              expressions_ = other.expressions_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureExpressionsIsMutable();
              expressions_.addAll(other.expressions_);
            }
            onChanged();
          }
        } else {
          if (!other.expressions_.isEmpty()) {
            if (expressionsBuilder_.isEmpty()) {
              expressionsBuilder_.dispose();
              expressionsBuilder_ = null;
              expressions_ = other.expressions_;
              bitField0_ = (bitField0_ & ~0x00000002);
              expressionsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getExpressionsFieldBuilder() : null;
            } else {
              expressionsBuilder_.addAllMessages(other.expressions_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        RootOuterClass.Expression parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (RootOuterClass.Expression) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object raw_ = "";
      /**
       * <code>string raw = 5;</code>
       * @return The raw.
       */
      public java.lang.String getRaw() {
        java.lang.Object ref = raw_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          raw_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string raw = 5;</code>
       * @return The bytes for raw.
       */
      public com.google.protobuf.ByteString
          getRawBytes() {
        java.lang.Object ref = raw_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          raw_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string raw = 5;</code>
       * @param value The raw to set.
       * @return This builder for chaining.
       */
      public Builder setRaw(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        raw_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string raw = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearRaw() {
        
        raw_ = getDefaultInstance().getRaw();
        onChanged();
        return this;
      }
      /**
       * <code>string raw = 5;</code>
       * @param value The bytes for raw to set.
       * @return This builder for chaining.
       */
      public Builder setRawBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        raw_ = value;
        onChanged();
        return this;
      }

      private java.util.List<RootOuterClass.Token> tokens_ =
        java.util.Collections.emptyList();
      private void ensureTokensIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          tokens_ = new java.util.ArrayList<RootOuterClass.Token>(tokens_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          RootOuterClass.Token, RootOuterClass.Token.Builder, RootOuterClass.TokenOrBuilder> tokensBuilder_;

      /**
       * <code>repeated .Token tokens = 6;</code>
       */
      public java.util.List<RootOuterClass.Token> getTokensList() {
        if (tokensBuilder_ == null) {
          return java.util.Collections.unmodifiableList(tokens_);
        } else {
          return tokensBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Token tokens = 6;</code>
       */
      public int getTokensCount() {
        if (tokensBuilder_ == null) {
          return tokens_.size();
        } else {
          return tokensBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Token tokens = 6;</code>
       */
      public RootOuterClass.Token getTokens(int index) {
        if (tokensBuilder_ == null) {
          return tokens_.get(index);
        } else {
          return tokensBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Token tokens = 6;</code>
       */
      public Builder setTokens(
          int index, RootOuterClass.Token value) {
        if (tokensBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTokensIsMutable();
          tokens_.set(index, value);
          onChanged();
        } else {
          tokensBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Token tokens = 6;</code>
       */
      public Builder setTokens(
          int index, RootOuterClass.Token.Builder builderForValue) {
        if (tokensBuilder_ == null) {
          ensureTokensIsMutable();
          tokens_.set(index, builderForValue.build());
          onChanged();
        } else {
          tokensBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Token tokens = 6;</code>
       */
      public Builder addTokens(RootOuterClass.Token value) {
        if (tokensBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTokensIsMutable();
          tokens_.add(value);
          onChanged();
        } else {
          tokensBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Token tokens = 6;</code>
       */
      public Builder addTokens(
          int index, RootOuterClass.Token value) {
        if (tokensBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTokensIsMutable();
          tokens_.add(index, value);
          onChanged();
        } else {
          tokensBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Token tokens = 6;</code>
       */
      public Builder addTokens(
          RootOuterClass.Token.Builder builderForValue) {
        if (tokensBuilder_ == null) {
          ensureTokensIsMutable();
          tokens_.add(builderForValue.build());
          onChanged();
        } else {
          tokensBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Token tokens = 6;</code>
       */
      public Builder addTokens(
          int index, RootOuterClass.Token.Builder builderForValue) {
        if (tokensBuilder_ == null) {
          ensureTokensIsMutable();
          tokens_.add(index, builderForValue.build());
          onChanged();
        } else {
          tokensBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Token tokens = 6;</code>
       */
      public Builder addAllTokens(
          java.lang.Iterable<? extends RootOuterClass.Token> values) {
        if (tokensBuilder_ == null) {
          ensureTokensIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, tokens_);
          onChanged();
        } else {
          tokensBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Token tokens = 6;</code>
       */
      public Builder clearTokens() {
        if (tokensBuilder_ == null) {
          tokens_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          tokensBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Token tokens = 6;</code>
       */
      public Builder removeTokens(int index) {
        if (tokensBuilder_ == null) {
          ensureTokensIsMutable();
          tokens_.remove(index);
          onChanged();
        } else {
          tokensBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Token tokens = 6;</code>
       */
      public RootOuterClass.Token.Builder getTokensBuilder(
          int index) {
        return getTokensFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Token tokens = 6;</code>
       */
      public RootOuterClass.TokenOrBuilder getTokensOrBuilder(
          int index) {
        if (tokensBuilder_ == null) {
          return tokens_.get(index);  } else {
          return tokensBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Token tokens = 6;</code>
       */
      public java.util.List<? extends RootOuterClass.TokenOrBuilder> 
           getTokensOrBuilderList() {
        if (tokensBuilder_ != null) {
          return tokensBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(tokens_);
        }
      }
      /**
       * <code>repeated .Token tokens = 6;</code>
       */
      public RootOuterClass.Token.Builder addTokensBuilder() {
        return getTokensFieldBuilder().addBuilder(
            RootOuterClass.Token.getDefaultInstance());
      }
      /**
       * <code>repeated .Token tokens = 6;</code>
       */
      public RootOuterClass.Token.Builder addTokensBuilder(
          int index) {
        return getTokensFieldBuilder().addBuilder(
            index, RootOuterClass.Token.getDefaultInstance());
      }
      /**
       * <code>repeated .Token tokens = 6;</code>
       */
      public java.util.List<RootOuterClass.Token.Builder> 
           getTokensBuilderList() {
        return getTokensFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          RootOuterClass.Token, RootOuterClass.Token.Builder, RootOuterClass.TokenOrBuilder> 
          getTokensFieldBuilder() {
        if (tokensBuilder_ == null) {
          tokensBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              RootOuterClass.Token, RootOuterClass.Token.Builder, RootOuterClass.TokenOrBuilder>(
                  tokens_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          tokens_ = null;
        }
        return tokensBuilder_;
      }

      private java.util.List<RootOuterClass.Expression> expressions_ =
        java.util.Collections.emptyList();
      private void ensureExpressionsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          expressions_ = new java.util.ArrayList<RootOuterClass.Expression>(expressions_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          RootOuterClass.Expression, RootOuterClass.Expression.Builder, RootOuterClass.ExpressionOrBuilder> expressionsBuilder_;

      /**
       * <code>repeated .Expression expressions = 7;</code>
       */
      public java.util.List<RootOuterClass.Expression> getExpressionsList() {
        if (expressionsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(expressions_);
        } else {
          return expressionsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Expression expressions = 7;</code>
       */
      public int getExpressionsCount() {
        if (expressionsBuilder_ == null) {
          return expressions_.size();
        } else {
          return expressionsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Expression expressions = 7;</code>
       */
      public RootOuterClass.Expression getExpressions(int index) {
        if (expressionsBuilder_ == null) {
          return expressions_.get(index);
        } else {
          return expressionsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Expression expressions = 7;</code>
       */
      public Builder setExpressions(
          int index, RootOuterClass.Expression value) {
        if (expressionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExpressionsIsMutable();
          expressions_.set(index, value);
          onChanged();
        } else {
          expressionsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Expression expressions = 7;</code>
       */
      public Builder setExpressions(
          int index, RootOuterClass.Expression.Builder builderForValue) {
        if (expressionsBuilder_ == null) {
          ensureExpressionsIsMutable();
          expressions_.set(index, builderForValue.build());
          onChanged();
        } else {
          expressionsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Expression expressions = 7;</code>
       */
      public Builder addExpressions(RootOuterClass.Expression value) {
        if (expressionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExpressionsIsMutable();
          expressions_.add(value);
          onChanged();
        } else {
          expressionsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Expression expressions = 7;</code>
       */
      public Builder addExpressions(
          int index, RootOuterClass.Expression value) {
        if (expressionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExpressionsIsMutable();
          expressions_.add(index, value);
          onChanged();
        } else {
          expressionsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Expression expressions = 7;</code>
       */
      public Builder addExpressions(
          RootOuterClass.Expression.Builder builderForValue) {
        if (expressionsBuilder_ == null) {
          ensureExpressionsIsMutable();
          expressions_.add(builderForValue.build());
          onChanged();
        } else {
          expressionsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Expression expressions = 7;</code>
       */
      public Builder addExpressions(
          int index, RootOuterClass.Expression.Builder builderForValue) {
        if (expressionsBuilder_ == null) {
          ensureExpressionsIsMutable();
          expressions_.add(index, builderForValue.build());
          onChanged();
        } else {
          expressionsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Expression expressions = 7;</code>
       */
      public Builder addAllExpressions(
          java.lang.Iterable<? extends RootOuterClass.Expression> values) {
        if (expressionsBuilder_ == null) {
          ensureExpressionsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, expressions_);
          onChanged();
        } else {
          expressionsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Expression expressions = 7;</code>
       */
      public Builder clearExpressions() {
        if (expressionsBuilder_ == null) {
          expressions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          expressionsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Expression expressions = 7;</code>
       */
      public Builder removeExpressions(int index) {
        if (expressionsBuilder_ == null) {
          ensureExpressionsIsMutable();
          expressions_.remove(index);
          onChanged();
        } else {
          expressionsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Expression expressions = 7;</code>
       */
      public RootOuterClass.Expression.Builder getExpressionsBuilder(
          int index) {
        return getExpressionsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Expression expressions = 7;</code>
       */
      public RootOuterClass.ExpressionOrBuilder getExpressionsOrBuilder(
          int index) {
        if (expressionsBuilder_ == null) {
          return expressions_.get(index);  } else {
          return expressionsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Expression expressions = 7;</code>
       */
      public java.util.List<? extends RootOuterClass.ExpressionOrBuilder> 
           getExpressionsOrBuilderList() {
        if (expressionsBuilder_ != null) {
          return expressionsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(expressions_);
        }
      }
      /**
       * <code>repeated .Expression expressions = 7;</code>
       */
      public RootOuterClass.Expression.Builder addExpressionsBuilder() {
        return getExpressionsFieldBuilder().addBuilder(
            RootOuterClass.Expression.getDefaultInstance());
      }
      /**
       * <code>repeated .Expression expressions = 7;</code>
       */
      public RootOuterClass.Expression.Builder addExpressionsBuilder(
          int index) {
        return getExpressionsFieldBuilder().addBuilder(
            index, RootOuterClass.Expression.getDefaultInstance());
      }
      /**
       * <code>repeated .Expression expressions = 7;</code>
       */
      public java.util.List<RootOuterClass.Expression.Builder> 
           getExpressionsBuilderList() {
        return getExpressionsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          RootOuterClass.Expression, RootOuterClass.Expression.Builder, RootOuterClass.ExpressionOrBuilder> 
          getExpressionsFieldBuilder() {
        if (expressionsBuilder_ == null) {
          expressionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              RootOuterClass.Expression, RootOuterClass.Expression.Builder, RootOuterClass.ExpressionOrBuilder>(
                  expressions_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          expressions_ = null;
        }
        return expressionsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Expression)
    }

    // @@protoc_insertion_point(class_scope:Expression)
    private static final RootOuterClass.Expression DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new RootOuterClass.Expression();
    }

    public static RootOuterClass.Expression getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Expression>
        PARSER = new com.google.protobuf.AbstractParser<Expression>() {
      @java.lang.Override
      public Expression parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Expression(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Expression> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Expression> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public RootOuterClass.Expression getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RootOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Root)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string file = 1;</code>
     * @return The file.
     */
    java.lang.String getFile();
    /**
     * <code>string file = 1;</code>
     * @return The bytes for file.
     */
    com.google.protobuf.ByteString
        getFileBytes();

    /**
     * <code>.SupportedLanguage language = 2;</code>
     * @return The enum numeric value on the wire for language.
     */
    int getLanguageValue();
    /**
     * <code>.SupportedLanguage language = 2;</code>
     * @return The language.
     */
    RootOuterClass.SupportedLanguage getLanguage();

    /**
     * <code>int32 line_number = 3;</code>
     * @return The lineNumber.
     */
    int getLineNumber();

    /**
     * <code>.Expression expression = 4;</code>
     * @return Whether the expression field is set.
     */
    boolean hasExpression();
    /**
     * <code>.Expression expression = 4;</code>
     * @return The expression.
     */
    RootOuterClass.Expression getExpression();
    /**
     * <code>.Expression expression = 4;</code>
     */
    RootOuterClass.ExpressionOrBuilder getExpressionOrBuilder();
  }
  /**
   * Protobuf type {@code Root}
   */
  public static final class Root extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Root)
      RootOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Root.newBuilder() to construct.
    private Root(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Root() {
      file_ = "";
      language_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Root();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Root(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              file_ = s;
              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              language_ = rawValue;
              break;
            }
            case 24: {

              lineNumber_ = input.readInt32();
              break;
            }
            case 34: {
              RootOuterClass.Expression.Builder subBuilder = null;
              if (expression_ != null) {
                subBuilder = expression_.toBuilder();
              }
              expression_ = input.readMessage(RootOuterClass.Expression.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(expression_);
                expression_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return RootOuterClass.internal_static_Root_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return RootOuterClass.internal_static_Root_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              RootOuterClass.Root.class, RootOuterClass.Root.Builder.class);
    }

    public static final int FILE_FIELD_NUMBER = 1;
    private volatile java.lang.Object file_;
    /**
     * <code>string file = 1;</code>
     * @return The file.
     */
    @java.lang.Override
    public java.lang.String getFile() {
      java.lang.Object ref = file_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        file_ = s;
        return s;
      }
    }
    /**
     * <code>string file = 1;</code>
     * @return The bytes for file.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getFileBytes() {
      java.lang.Object ref = file_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        file_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LANGUAGE_FIELD_NUMBER = 2;
    private int language_;
    /**
     * <code>.SupportedLanguage language = 2;</code>
     * @return The enum numeric value on the wire for language.
     */
    @java.lang.Override public int getLanguageValue() {
      return language_;
    }
    /**
     * <code>.SupportedLanguage language = 2;</code>
     * @return The language.
     */
    @java.lang.Override public RootOuterClass.SupportedLanguage getLanguage() {
      @SuppressWarnings("deprecation")
      RootOuterClass.SupportedLanguage result = RootOuterClass.SupportedLanguage.valueOf(language_);
      return result == null ? RootOuterClass.SupportedLanguage.UNRECOGNIZED : result;
    }

    public static final int LINE_NUMBER_FIELD_NUMBER = 3;
    private int lineNumber_;
    /**
     * <code>int32 line_number = 3;</code>
     * @return The lineNumber.
     */
    @java.lang.Override
    public int getLineNumber() {
      return lineNumber_;
    }

    public static final int EXPRESSION_FIELD_NUMBER = 4;
    private RootOuterClass.Expression expression_;
    /**
     * <code>.Expression expression = 4;</code>
     * @return Whether the expression field is set.
     */
    @java.lang.Override
    public boolean hasExpression() {
      return expression_ != null;
    }
    /**
     * <code>.Expression expression = 4;</code>
     * @return The expression.
     */
    @java.lang.Override
    public RootOuterClass.Expression getExpression() {
      return expression_ == null ? RootOuterClass.Expression.getDefaultInstance() : expression_;
    }
    /**
     * <code>.Expression expression = 4;</code>
     */
    @java.lang.Override
    public RootOuterClass.ExpressionOrBuilder getExpressionOrBuilder() {
      return getExpression();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getFileBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, file_);
      }
      if (language_ != RootOuterClass.SupportedLanguage.Python.getNumber()) {
        output.writeEnum(2, language_);
      }
      if (lineNumber_ != 0) {
        output.writeInt32(3, lineNumber_);
      }
      if (expression_ != null) {
        output.writeMessage(4, getExpression());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getFileBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, file_);
      }
      if (language_ != RootOuterClass.SupportedLanguage.Python.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, language_);
      }
      if (lineNumber_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, lineNumber_);
      }
      if (expression_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getExpression());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof RootOuterClass.Root)) {
        return super.equals(obj);
      }
      RootOuterClass.Root other = (RootOuterClass.Root) obj;

      if (!getFile()
          .equals(other.getFile())) return false;
      if (language_ != other.language_) return false;
      if (getLineNumber()
          != other.getLineNumber()) return false;
      if (hasExpression() != other.hasExpression()) return false;
      if (hasExpression()) {
        if (!getExpression()
            .equals(other.getExpression())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + FILE_FIELD_NUMBER;
      hash = (53 * hash) + getFile().hashCode();
      hash = (37 * hash) + LANGUAGE_FIELD_NUMBER;
      hash = (53 * hash) + language_;
      hash = (37 * hash) + LINE_NUMBER_FIELD_NUMBER;
      hash = (53 * hash) + getLineNumber();
      if (hasExpression()) {
        hash = (37 * hash) + EXPRESSION_FIELD_NUMBER;
        hash = (53 * hash) + getExpression().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static RootOuterClass.Root parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RootOuterClass.Root parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RootOuterClass.Root parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RootOuterClass.Root parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RootOuterClass.Root parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RootOuterClass.Root parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RootOuterClass.Root parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RootOuterClass.Root parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static RootOuterClass.Root parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static RootOuterClass.Root parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static RootOuterClass.Root parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RootOuterClass.Root parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(RootOuterClass.Root prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Root}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Root)
        RootOuterClass.RootOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return RootOuterClass.internal_static_Root_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return RootOuterClass.internal_static_Root_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                RootOuterClass.Root.class, RootOuterClass.Root.Builder.class);
      }

      // Construct using RootOuterClass.Root.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        file_ = "";

        language_ = 0;

        lineNumber_ = 0;

        if (expressionBuilder_ == null) {
          expression_ = null;
        } else {
          expression_ = null;
          expressionBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return RootOuterClass.internal_static_Root_descriptor;
      }

      @java.lang.Override
      public RootOuterClass.Root getDefaultInstanceForType() {
        return RootOuterClass.Root.getDefaultInstance();
      }

      @java.lang.Override
      public RootOuterClass.Root build() {
        RootOuterClass.Root result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public RootOuterClass.Root buildPartial() {
        RootOuterClass.Root result = new RootOuterClass.Root(this);
        result.file_ = file_;
        result.language_ = language_;
        result.lineNumber_ = lineNumber_;
        if (expressionBuilder_ == null) {
          result.expression_ = expression_;
        } else {
          result.expression_ = expressionBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof RootOuterClass.Root) {
          return mergeFrom((RootOuterClass.Root)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(RootOuterClass.Root other) {
        if (other == RootOuterClass.Root.getDefaultInstance()) return this;
        if (!other.getFile().isEmpty()) {
          file_ = other.file_;
          onChanged();
        }
        if (other.language_ != 0) {
          setLanguageValue(other.getLanguageValue());
        }
        if (other.getLineNumber() != 0) {
          setLineNumber(other.getLineNumber());
        }
        if (other.hasExpression()) {
          mergeExpression(other.getExpression());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        RootOuterClass.Root parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (RootOuterClass.Root) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object file_ = "";
      /**
       * <code>string file = 1;</code>
       * @return The file.
       */
      public java.lang.String getFile() {
        java.lang.Object ref = file_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          file_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string file = 1;</code>
       * @return The bytes for file.
       */
      public com.google.protobuf.ByteString
          getFileBytes() {
        java.lang.Object ref = file_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          file_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string file = 1;</code>
       * @param value The file to set.
       * @return This builder for chaining.
       */
      public Builder setFile(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        file_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string file = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearFile() {
        
        file_ = getDefaultInstance().getFile();
        onChanged();
        return this;
      }
      /**
       * <code>string file = 1;</code>
       * @param value The bytes for file to set.
       * @return This builder for chaining.
       */
      public Builder setFileBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        file_ = value;
        onChanged();
        return this;
      }

      private int language_ = 0;
      /**
       * <code>.SupportedLanguage language = 2;</code>
       * @return The enum numeric value on the wire for language.
       */
      @java.lang.Override public int getLanguageValue() {
        return language_;
      }
      /**
       * <code>.SupportedLanguage language = 2;</code>
       * @param value The enum numeric value on the wire for language to set.
       * @return This builder for chaining.
       */
      public Builder setLanguageValue(int value) {
        
        language_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.SupportedLanguage language = 2;</code>
       * @return The language.
       */
      @java.lang.Override
      public RootOuterClass.SupportedLanguage getLanguage() {
        @SuppressWarnings("deprecation")
        RootOuterClass.SupportedLanguage result = RootOuterClass.SupportedLanguage.valueOf(language_);
        return result == null ? RootOuterClass.SupportedLanguage.UNRECOGNIZED : result;
      }
      /**
       * <code>.SupportedLanguage language = 2;</code>
       * @param value The language to set.
       * @return This builder for chaining.
       */
      public Builder setLanguage(RootOuterClass.SupportedLanguage value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        language_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.SupportedLanguage language = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearLanguage() {
        
        language_ = 0;
        onChanged();
        return this;
      }

      private int lineNumber_ ;
      /**
       * <code>int32 line_number = 3;</code>
       * @return The lineNumber.
       */
      @java.lang.Override
      public int getLineNumber() {
        return lineNumber_;
      }
      /**
       * <code>int32 line_number = 3;</code>
       * @param value The lineNumber to set.
       * @return This builder for chaining.
       */
      public Builder setLineNumber(int value) {
        
        lineNumber_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 line_number = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearLineNumber() {
        
        lineNumber_ = 0;
        onChanged();
        return this;
      }

      private RootOuterClass.Expression expression_;
      private com.google.protobuf.SingleFieldBuilderV3<
          RootOuterClass.Expression, RootOuterClass.Expression.Builder, RootOuterClass.ExpressionOrBuilder> expressionBuilder_;
      /**
       * <code>.Expression expression = 4;</code>
       * @return Whether the expression field is set.
       */
      public boolean hasExpression() {
        return expressionBuilder_ != null || expression_ != null;
      }
      /**
       * <code>.Expression expression = 4;</code>
       * @return The expression.
       */
      public RootOuterClass.Expression getExpression() {
        if (expressionBuilder_ == null) {
          return expression_ == null ? RootOuterClass.Expression.getDefaultInstance() : expression_;
        } else {
          return expressionBuilder_.getMessage();
        }
      }
      /**
       * <code>.Expression expression = 4;</code>
       */
      public Builder setExpression(RootOuterClass.Expression value) {
        if (expressionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          expression_ = value;
          onChanged();
        } else {
          expressionBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.Expression expression = 4;</code>
       */
      public Builder setExpression(
          RootOuterClass.Expression.Builder builderForValue) {
        if (expressionBuilder_ == null) {
          expression_ = builderForValue.build();
          onChanged();
        } else {
          expressionBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.Expression expression = 4;</code>
       */
      public Builder mergeExpression(RootOuterClass.Expression value) {
        if (expressionBuilder_ == null) {
          if (expression_ != null) {
            expression_ =
              RootOuterClass.Expression.newBuilder(expression_).mergeFrom(value).buildPartial();
          } else {
            expression_ = value;
          }
          onChanged();
        } else {
          expressionBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.Expression expression = 4;</code>
       */
      public Builder clearExpression() {
        if (expressionBuilder_ == null) {
          expression_ = null;
          onChanged();
        } else {
          expression_ = null;
          expressionBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.Expression expression = 4;</code>
       */
      public RootOuterClass.Expression.Builder getExpressionBuilder() {
        
        onChanged();
        return getExpressionFieldBuilder().getBuilder();
      }
      /**
       * <code>.Expression expression = 4;</code>
       */
      public RootOuterClass.ExpressionOrBuilder getExpressionOrBuilder() {
        if (expressionBuilder_ != null) {
          return expressionBuilder_.getMessageOrBuilder();
        } else {
          return expression_ == null ?
              RootOuterClass.Expression.getDefaultInstance() : expression_;
        }
      }
      /**
       * <code>.Expression expression = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          RootOuterClass.Expression, RootOuterClass.Expression.Builder, RootOuterClass.ExpressionOrBuilder> 
          getExpressionFieldBuilder() {
        if (expressionBuilder_ == null) {
          expressionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              RootOuterClass.Expression, RootOuterClass.Expression.Builder, RootOuterClass.ExpressionOrBuilder>(
                  getExpression(),
                  getParentForChildren(),
                  isClean());
          expression_ = null;
        }
        return expressionBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Root)
    }

    // @@protoc_insertion_point(class_scope:Root)
    private static final RootOuterClass.Root DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new RootOuterClass.Root();
    }

    public static RootOuterClass.Root getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Root>
        PARSER = new com.google.protobuf.AbstractParser<Root>() {
      @java.lang.Override
      public Root parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Root(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Root> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Root> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public RootOuterClass.Root getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AnnotationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Annotation)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string note = 1;</code>
     * @return The note.
     */
    java.lang.String getNote();
    /**
     * <code>string note = 1;</code>
     * @return The bytes for note.
     */
    com.google.protobuf.ByteString
        getNoteBytes();

    /**
     * <code>string entity = 2;</code>
     * @return The entity.
     */
    java.lang.String getEntity();
    /**
     * <code>string entity = 2;</code>
     * @return The bytes for entity.
     */
    com.google.protobuf.ByteString
        getEntityBytes();

    /**
     * <code>.Token token = 3;</code>
     * @return Whether the token field is set.
     */
    boolean hasToken();
    /**
     * <code>.Token token = 3;</code>
     * @return The token.
     */
    RootOuterClass.Token getToken();
    /**
     * <code>.Token token = 3;</code>
     */
    RootOuterClass.TokenOrBuilder getTokenOrBuilder();

    /**
     * <code>.Expression expression = 4;</code>
     * @return Whether the expression field is set.
     */
    boolean hasExpression();
    /**
     * <code>.Expression expression = 4;</code>
     * @return The expression.
     */
    RootOuterClass.Expression getExpression();
    /**
     * <code>.Expression expression = 4;</code>
     */
    RootOuterClass.ExpressionOrBuilder getExpressionOrBuilder();

    public RootOuterClass.Annotation.RelevantEntityCase getRelevantEntityCase();
  }
  /**
   * Protobuf type {@code Annotation}
   */
  public static final class Annotation extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Annotation)
      AnnotationOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Annotation.newBuilder() to construct.
    private Annotation(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Annotation() {
      note_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Annotation();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Annotation(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              note_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();
              relevantEntityCase_ = 2;
              relevantEntity_ = s;
              break;
            }
            case 26: {
              RootOuterClass.Token.Builder subBuilder = null;
              if (relevantEntityCase_ == 3) {
                subBuilder = ((RootOuterClass.Token) relevantEntity_).toBuilder();
              }
              relevantEntity_ =
                  input.readMessage(RootOuterClass.Token.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((RootOuterClass.Token) relevantEntity_);
                relevantEntity_ = subBuilder.buildPartial();
              }
              relevantEntityCase_ = 3;
              break;
            }
            case 34: {
              RootOuterClass.Expression.Builder subBuilder = null;
              if (relevantEntityCase_ == 4) {
                subBuilder = ((RootOuterClass.Expression) relevantEntity_).toBuilder();
              }
              relevantEntity_ =
                  input.readMessage(RootOuterClass.Expression.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((RootOuterClass.Expression) relevantEntity_);
                relevantEntity_ = subBuilder.buildPartial();
              }
              relevantEntityCase_ = 4;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return RootOuterClass.internal_static_Annotation_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return RootOuterClass.internal_static_Annotation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              RootOuterClass.Annotation.class, RootOuterClass.Annotation.Builder.class);
    }

    private int relevantEntityCase_ = 0;
    private java.lang.Object relevantEntity_;
    public enum RelevantEntityCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      ENTITY(2),
      TOKEN(3),
      EXPRESSION(4),
      RELEVANTENTITY_NOT_SET(0);
      private final int value;
      private RelevantEntityCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static RelevantEntityCase valueOf(int value) {
        return forNumber(value);
      }

      public static RelevantEntityCase forNumber(int value) {
        switch (value) {
          case 2: return ENTITY;
          case 3: return TOKEN;
          case 4: return EXPRESSION;
          case 0: return RELEVANTENTITY_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public RelevantEntityCase
    getRelevantEntityCase() {
      return RelevantEntityCase.forNumber(
          relevantEntityCase_);
    }

    public static final int NOTE_FIELD_NUMBER = 1;
    private volatile java.lang.Object note_;
    /**
     * <code>string note = 1;</code>
     * @return The note.
     */
    @java.lang.Override
    public java.lang.String getNote() {
      java.lang.Object ref = note_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        note_ = s;
        return s;
      }
    }
    /**
     * <code>string note = 1;</code>
     * @return The bytes for note.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNoteBytes() {
      java.lang.Object ref = note_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        note_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ENTITY_FIELD_NUMBER = 2;
    /**
     * <code>string entity = 2;</code>
     * @return The entity.
     */
    public java.lang.String getEntity() {
      java.lang.Object ref = "";
      if (relevantEntityCase_ == 2) {
        ref = relevantEntity_;
      }
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (relevantEntityCase_ == 2) {
          relevantEntity_ = s;
        }
        return s;
      }
    }
    /**
     * <code>string entity = 2;</code>
     * @return The bytes for entity.
     */
    public com.google.protobuf.ByteString
        getEntityBytes() {
      java.lang.Object ref = "";
      if (relevantEntityCase_ == 2) {
        ref = relevantEntity_;
      }
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (relevantEntityCase_ == 2) {
          relevantEntity_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TOKEN_FIELD_NUMBER = 3;
    /**
     * <code>.Token token = 3;</code>
     * @return Whether the token field is set.
     */
    @java.lang.Override
    public boolean hasToken() {
      return relevantEntityCase_ == 3;
    }
    /**
     * <code>.Token token = 3;</code>
     * @return The token.
     */
    @java.lang.Override
    public RootOuterClass.Token getToken() {
      if (relevantEntityCase_ == 3) {
         return (RootOuterClass.Token) relevantEntity_;
      }
      return RootOuterClass.Token.getDefaultInstance();
    }
    /**
     * <code>.Token token = 3;</code>
     */
    @java.lang.Override
    public RootOuterClass.TokenOrBuilder getTokenOrBuilder() {
      if (relevantEntityCase_ == 3) {
         return (RootOuterClass.Token) relevantEntity_;
      }
      return RootOuterClass.Token.getDefaultInstance();
    }

    public static final int EXPRESSION_FIELD_NUMBER = 4;
    /**
     * <code>.Expression expression = 4;</code>
     * @return Whether the expression field is set.
     */
    @java.lang.Override
    public boolean hasExpression() {
      return relevantEntityCase_ == 4;
    }
    /**
     * <code>.Expression expression = 4;</code>
     * @return The expression.
     */
    @java.lang.Override
    public RootOuterClass.Expression getExpression() {
      if (relevantEntityCase_ == 4) {
         return (RootOuterClass.Expression) relevantEntity_;
      }
      return RootOuterClass.Expression.getDefaultInstance();
    }
    /**
     * <code>.Expression expression = 4;</code>
     */
    @java.lang.Override
    public RootOuterClass.ExpressionOrBuilder getExpressionOrBuilder() {
      if (relevantEntityCase_ == 4) {
         return (RootOuterClass.Expression) relevantEntity_;
      }
      return RootOuterClass.Expression.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getNoteBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, note_);
      }
      if (relevantEntityCase_ == 2) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, relevantEntity_);
      }
      if (relevantEntityCase_ == 3) {
        output.writeMessage(3, (RootOuterClass.Token) relevantEntity_);
      }
      if (relevantEntityCase_ == 4) {
        output.writeMessage(4, (RootOuterClass.Expression) relevantEntity_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getNoteBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, note_);
      }
      if (relevantEntityCase_ == 2) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, relevantEntity_);
      }
      if (relevantEntityCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (RootOuterClass.Token) relevantEntity_);
      }
      if (relevantEntityCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, (RootOuterClass.Expression) relevantEntity_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof RootOuterClass.Annotation)) {
        return super.equals(obj);
      }
      RootOuterClass.Annotation other = (RootOuterClass.Annotation) obj;

      if (!getNote()
          .equals(other.getNote())) return false;
      if (!getRelevantEntityCase().equals(other.getRelevantEntityCase())) return false;
      switch (relevantEntityCase_) {
        case 2:
          if (!getEntity()
              .equals(other.getEntity())) return false;
          break;
        case 3:
          if (!getToken()
              .equals(other.getToken())) return false;
          break;
        case 4:
          if (!getExpression()
              .equals(other.getExpression())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NOTE_FIELD_NUMBER;
      hash = (53 * hash) + getNote().hashCode();
      switch (relevantEntityCase_) {
        case 2:
          hash = (37 * hash) + ENTITY_FIELD_NUMBER;
          hash = (53 * hash) + getEntity().hashCode();
          break;
        case 3:
          hash = (37 * hash) + TOKEN_FIELD_NUMBER;
          hash = (53 * hash) + getToken().hashCode();
          break;
        case 4:
          hash = (37 * hash) + EXPRESSION_FIELD_NUMBER;
          hash = (53 * hash) + getExpression().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static RootOuterClass.Annotation parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RootOuterClass.Annotation parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RootOuterClass.Annotation parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RootOuterClass.Annotation parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RootOuterClass.Annotation parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RootOuterClass.Annotation parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RootOuterClass.Annotation parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RootOuterClass.Annotation parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static RootOuterClass.Annotation parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static RootOuterClass.Annotation parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static RootOuterClass.Annotation parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RootOuterClass.Annotation parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(RootOuterClass.Annotation prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Annotation}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Annotation)
        RootOuterClass.AnnotationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return RootOuterClass.internal_static_Annotation_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return RootOuterClass.internal_static_Annotation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                RootOuterClass.Annotation.class, RootOuterClass.Annotation.Builder.class);
      }

      // Construct using RootOuterClass.Annotation.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        note_ = "";

        relevantEntityCase_ = 0;
        relevantEntity_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return RootOuterClass.internal_static_Annotation_descriptor;
      }

      @java.lang.Override
      public RootOuterClass.Annotation getDefaultInstanceForType() {
        return RootOuterClass.Annotation.getDefaultInstance();
      }

      @java.lang.Override
      public RootOuterClass.Annotation build() {
        RootOuterClass.Annotation result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public RootOuterClass.Annotation buildPartial() {
        RootOuterClass.Annotation result = new RootOuterClass.Annotation(this);
        result.note_ = note_;
        if (relevantEntityCase_ == 2) {
          result.relevantEntity_ = relevantEntity_;
        }
        if (relevantEntityCase_ == 3) {
          if (tokenBuilder_ == null) {
            result.relevantEntity_ = relevantEntity_;
          } else {
            result.relevantEntity_ = tokenBuilder_.build();
          }
        }
        if (relevantEntityCase_ == 4) {
          if (expressionBuilder_ == null) {
            result.relevantEntity_ = relevantEntity_;
          } else {
            result.relevantEntity_ = expressionBuilder_.build();
          }
        }
        result.relevantEntityCase_ = relevantEntityCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof RootOuterClass.Annotation) {
          return mergeFrom((RootOuterClass.Annotation)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(RootOuterClass.Annotation other) {
        if (other == RootOuterClass.Annotation.getDefaultInstance()) return this;
        if (!other.getNote().isEmpty()) {
          note_ = other.note_;
          onChanged();
        }
        switch (other.getRelevantEntityCase()) {
          case ENTITY: {
            relevantEntityCase_ = 2;
            relevantEntity_ = other.relevantEntity_;
            onChanged();
            break;
          }
          case TOKEN: {
            mergeToken(other.getToken());
            break;
          }
          case EXPRESSION: {
            mergeExpression(other.getExpression());
            break;
          }
          case RELEVANTENTITY_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        RootOuterClass.Annotation parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (RootOuterClass.Annotation) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int relevantEntityCase_ = 0;
      private java.lang.Object relevantEntity_;
      public RelevantEntityCase
          getRelevantEntityCase() {
        return RelevantEntityCase.forNumber(
            relevantEntityCase_);
      }

      public Builder clearRelevantEntity() {
        relevantEntityCase_ = 0;
        relevantEntity_ = null;
        onChanged();
        return this;
      }


      private java.lang.Object note_ = "";
      /**
       * <code>string note = 1;</code>
       * @return The note.
       */
      public java.lang.String getNote() {
        java.lang.Object ref = note_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          note_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string note = 1;</code>
       * @return The bytes for note.
       */
      public com.google.protobuf.ByteString
          getNoteBytes() {
        java.lang.Object ref = note_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          note_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string note = 1;</code>
       * @param value The note to set.
       * @return This builder for chaining.
       */
      public Builder setNote(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        note_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string note = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearNote() {
        
        note_ = getDefaultInstance().getNote();
        onChanged();
        return this;
      }
      /**
       * <code>string note = 1;</code>
       * @param value The bytes for note to set.
       * @return This builder for chaining.
       */
      public Builder setNoteBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        note_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>string entity = 2;</code>
       * @return The entity.
       */
      @java.lang.Override
      public java.lang.String getEntity() {
        java.lang.Object ref = "";
        if (relevantEntityCase_ == 2) {
          ref = relevantEntity_;
        }
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (relevantEntityCase_ == 2) {
            relevantEntity_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string entity = 2;</code>
       * @return The bytes for entity.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getEntityBytes() {
        java.lang.Object ref = "";
        if (relevantEntityCase_ == 2) {
          ref = relevantEntity_;
        }
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          if (relevantEntityCase_ == 2) {
            relevantEntity_ = b;
          }
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string entity = 2;</code>
       * @param value The entity to set.
       * @return This builder for chaining.
       */
      public Builder setEntity(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  relevantEntityCase_ = 2;
        relevantEntity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string entity = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearEntity() {
        if (relevantEntityCase_ == 2) {
          relevantEntityCase_ = 0;
          relevantEntity_ = null;
          onChanged();
        }
        return this;
      }
      /**
       * <code>string entity = 2;</code>
       * @param value The bytes for entity to set.
       * @return This builder for chaining.
       */
      public Builder setEntityBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        relevantEntityCase_ = 2;
        relevantEntity_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          RootOuterClass.Token, RootOuterClass.Token.Builder, RootOuterClass.TokenOrBuilder> tokenBuilder_;
      /**
       * <code>.Token token = 3;</code>
       * @return Whether the token field is set.
       */
      @java.lang.Override
      public boolean hasToken() {
        return relevantEntityCase_ == 3;
      }
      /**
       * <code>.Token token = 3;</code>
       * @return The token.
       */
      @java.lang.Override
      public RootOuterClass.Token getToken() {
        if (tokenBuilder_ == null) {
          if (relevantEntityCase_ == 3) {
            return (RootOuterClass.Token) relevantEntity_;
          }
          return RootOuterClass.Token.getDefaultInstance();
        } else {
          if (relevantEntityCase_ == 3) {
            return tokenBuilder_.getMessage();
          }
          return RootOuterClass.Token.getDefaultInstance();
        }
      }
      /**
       * <code>.Token token = 3;</code>
       */
      public Builder setToken(RootOuterClass.Token value) {
        if (tokenBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          relevantEntity_ = value;
          onChanged();
        } else {
          tokenBuilder_.setMessage(value);
        }
        relevantEntityCase_ = 3;
        return this;
      }
      /**
       * <code>.Token token = 3;</code>
       */
      public Builder setToken(
          RootOuterClass.Token.Builder builderForValue) {
        if (tokenBuilder_ == null) {
          relevantEntity_ = builderForValue.build();
          onChanged();
        } else {
          tokenBuilder_.setMessage(builderForValue.build());
        }
        relevantEntityCase_ = 3;
        return this;
      }
      /**
       * <code>.Token token = 3;</code>
       */
      public Builder mergeToken(RootOuterClass.Token value) {
        if (tokenBuilder_ == null) {
          if (relevantEntityCase_ == 3 &&
              relevantEntity_ != RootOuterClass.Token.getDefaultInstance()) {
            relevantEntity_ = RootOuterClass.Token.newBuilder((RootOuterClass.Token) relevantEntity_)
                .mergeFrom(value).buildPartial();
          } else {
            relevantEntity_ = value;
          }
          onChanged();
        } else {
          if (relevantEntityCase_ == 3) {
            tokenBuilder_.mergeFrom(value);
          }
          tokenBuilder_.setMessage(value);
        }
        relevantEntityCase_ = 3;
        return this;
      }
      /**
       * <code>.Token token = 3;</code>
       */
      public Builder clearToken() {
        if (tokenBuilder_ == null) {
          if (relevantEntityCase_ == 3) {
            relevantEntityCase_ = 0;
            relevantEntity_ = null;
            onChanged();
          }
        } else {
          if (relevantEntityCase_ == 3) {
            relevantEntityCase_ = 0;
            relevantEntity_ = null;
          }
          tokenBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.Token token = 3;</code>
       */
      public RootOuterClass.Token.Builder getTokenBuilder() {
        return getTokenFieldBuilder().getBuilder();
      }
      /**
       * <code>.Token token = 3;</code>
       */
      @java.lang.Override
      public RootOuterClass.TokenOrBuilder getTokenOrBuilder() {
        if ((relevantEntityCase_ == 3) && (tokenBuilder_ != null)) {
          return tokenBuilder_.getMessageOrBuilder();
        } else {
          if (relevantEntityCase_ == 3) {
            return (RootOuterClass.Token) relevantEntity_;
          }
          return RootOuterClass.Token.getDefaultInstance();
        }
      }
      /**
       * <code>.Token token = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          RootOuterClass.Token, RootOuterClass.Token.Builder, RootOuterClass.TokenOrBuilder> 
          getTokenFieldBuilder() {
        if (tokenBuilder_ == null) {
          if (!(relevantEntityCase_ == 3)) {
            relevantEntity_ = RootOuterClass.Token.getDefaultInstance();
          }
          tokenBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              RootOuterClass.Token, RootOuterClass.Token.Builder, RootOuterClass.TokenOrBuilder>(
                  (RootOuterClass.Token) relevantEntity_,
                  getParentForChildren(),
                  isClean());
          relevantEntity_ = null;
        }
        relevantEntityCase_ = 3;
        onChanged();;
        return tokenBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          RootOuterClass.Expression, RootOuterClass.Expression.Builder, RootOuterClass.ExpressionOrBuilder> expressionBuilder_;
      /**
       * <code>.Expression expression = 4;</code>
       * @return Whether the expression field is set.
       */
      @java.lang.Override
      public boolean hasExpression() {
        return relevantEntityCase_ == 4;
      }
      /**
       * <code>.Expression expression = 4;</code>
       * @return The expression.
       */
      @java.lang.Override
      public RootOuterClass.Expression getExpression() {
        if (expressionBuilder_ == null) {
          if (relevantEntityCase_ == 4) {
            return (RootOuterClass.Expression) relevantEntity_;
          }
          return RootOuterClass.Expression.getDefaultInstance();
        } else {
          if (relevantEntityCase_ == 4) {
            return expressionBuilder_.getMessage();
          }
          return RootOuterClass.Expression.getDefaultInstance();
        }
      }
      /**
       * <code>.Expression expression = 4;</code>
       */
      public Builder setExpression(RootOuterClass.Expression value) {
        if (expressionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          relevantEntity_ = value;
          onChanged();
        } else {
          expressionBuilder_.setMessage(value);
        }
        relevantEntityCase_ = 4;
        return this;
      }
      /**
       * <code>.Expression expression = 4;</code>
       */
      public Builder setExpression(
          RootOuterClass.Expression.Builder builderForValue) {
        if (expressionBuilder_ == null) {
          relevantEntity_ = builderForValue.build();
          onChanged();
        } else {
          expressionBuilder_.setMessage(builderForValue.build());
        }
        relevantEntityCase_ = 4;
        return this;
      }
      /**
       * <code>.Expression expression = 4;</code>
       */
      public Builder mergeExpression(RootOuterClass.Expression value) {
        if (expressionBuilder_ == null) {
          if (relevantEntityCase_ == 4 &&
              relevantEntity_ != RootOuterClass.Expression.getDefaultInstance()) {
            relevantEntity_ = RootOuterClass.Expression.newBuilder((RootOuterClass.Expression) relevantEntity_)
                .mergeFrom(value).buildPartial();
          } else {
            relevantEntity_ = value;
          }
          onChanged();
        } else {
          if (relevantEntityCase_ == 4) {
            expressionBuilder_.mergeFrom(value);
          }
          expressionBuilder_.setMessage(value);
        }
        relevantEntityCase_ = 4;
        return this;
      }
      /**
       * <code>.Expression expression = 4;</code>
       */
      public Builder clearExpression() {
        if (expressionBuilder_ == null) {
          if (relevantEntityCase_ == 4) {
            relevantEntityCase_ = 0;
            relevantEntity_ = null;
            onChanged();
          }
        } else {
          if (relevantEntityCase_ == 4) {
            relevantEntityCase_ = 0;
            relevantEntity_ = null;
          }
          expressionBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.Expression expression = 4;</code>
       */
      public RootOuterClass.Expression.Builder getExpressionBuilder() {
        return getExpressionFieldBuilder().getBuilder();
      }
      /**
       * <code>.Expression expression = 4;</code>
       */
      @java.lang.Override
      public RootOuterClass.ExpressionOrBuilder getExpressionOrBuilder() {
        if ((relevantEntityCase_ == 4) && (expressionBuilder_ != null)) {
          return expressionBuilder_.getMessageOrBuilder();
        } else {
          if (relevantEntityCase_ == 4) {
            return (RootOuterClass.Expression) relevantEntity_;
          }
          return RootOuterClass.Expression.getDefaultInstance();
        }
      }
      /**
       * <code>.Expression expression = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          RootOuterClass.Expression, RootOuterClass.Expression.Builder, RootOuterClass.ExpressionOrBuilder> 
          getExpressionFieldBuilder() {
        if (expressionBuilder_ == null) {
          if (!(relevantEntityCase_ == 4)) {
            relevantEntity_ = RootOuterClass.Expression.getDefaultInstance();
          }
          expressionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              RootOuterClass.Expression, RootOuterClass.Expression.Builder, RootOuterClass.ExpressionOrBuilder>(
                  (RootOuterClass.Expression) relevantEntity_,
                  getParentForChildren(),
                  isClean());
          relevantEntity_ = null;
        }
        relevantEntityCase_ = 4;
        onChanged();;
        return expressionBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Annotation)
    }

    // @@protoc_insertion_point(class_scope:Annotation)
    private static final RootOuterClass.Annotation DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new RootOuterClass.Annotation();
    }

    public static RootOuterClass.Annotation getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Annotation>
        PARSER = new com.google.protobuf.AbstractParser<Annotation>() {
      @java.lang.Override
      public Annotation parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Annotation(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Annotation> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Annotation> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public RootOuterClass.Annotation getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface OutputOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Output)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string status = 1;</code>
     * @return The status.
     */
    java.lang.String getStatus();
    /**
     * <code>string status = 1;</code>
     * @return The bytes for status.
     */
    com.google.protobuf.ByteString
        getStatusBytes();

    /**
     * <code>repeated .Annotation annotations = 2;</code>
     */
    java.util.List<RootOuterClass.Annotation> 
        getAnnotationsList();
    /**
     * <code>repeated .Annotation annotations = 2;</code>
     */
    RootOuterClass.Annotation getAnnotations(int index);
    /**
     * <code>repeated .Annotation annotations = 2;</code>
     */
    int getAnnotationsCount();
    /**
     * <code>repeated .Annotation annotations = 2;</code>
     */
    java.util.List<? extends RootOuterClass.AnnotationOrBuilder> 
        getAnnotationsOrBuilderList();
    /**
     * <code>repeated .Annotation annotations = 2;</code>
     */
    RootOuterClass.AnnotationOrBuilder getAnnotationsOrBuilder(
        int index);

    /**
     * <code>int32 score = 3;</code>
     * @return The score.
     */
    int getScore();
  }
  /**
   * Protobuf type {@code Output}
   */
  public static final class Output extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Output)
      OutputOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Output.newBuilder() to construct.
    private Output(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Output() {
      status_ = "";
      annotations_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Output();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Output(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              status_ = s;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                annotations_ = new java.util.ArrayList<RootOuterClass.Annotation>();
                mutable_bitField0_ |= 0x00000001;
              }
              annotations_.add(
                  input.readMessage(RootOuterClass.Annotation.parser(), extensionRegistry));
              break;
            }
            case 24: {

              score_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          annotations_ = java.util.Collections.unmodifiableList(annotations_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return RootOuterClass.internal_static_Output_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return RootOuterClass.internal_static_Output_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              RootOuterClass.Output.class, RootOuterClass.Output.Builder.class);
    }

    public static final int STATUS_FIELD_NUMBER = 1;
    private volatile java.lang.Object status_;
    /**
     * <code>string status = 1;</code>
     * @return The status.
     */
    @java.lang.Override
    public java.lang.String getStatus() {
      java.lang.Object ref = status_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        status_ = s;
        return s;
      }
    }
    /**
     * <code>string status = 1;</code>
     * @return The bytes for status.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getStatusBytes() {
      java.lang.Object ref = status_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        status_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ANNOTATIONS_FIELD_NUMBER = 2;
    private java.util.List<RootOuterClass.Annotation> annotations_;
    /**
     * <code>repeated .Annotation annotations = 2;</code>
     */
    @java.lang.Override
    public java.util.List<RootOuterClass.Annotation> getAnnotationsList() {
      return annotations_;
    }
    /**
     * <code>repeated .Annotation annotations = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends RootOuterClass.AnnotationOrBuilder> 
        getAnnotationsOrBuilderList() {
      return annotations_;
    }
    /**
     * <code>repeated .Annotation annotations = 2;</code>
     */
    @java.lang.Override
    public int getAnnotationsCount() {
      return annotations_.size();
    }
    /**
     * <code>repeated .Annotation annotations = 2;</code>
     */
    @java.lang.Override
    public RootOuterClass.Annotation getAnnotations(int index) {
      return annotations_.get(index);
    }
    /**
     * <code>repeated .Annotation annotations = 2;</code>
     */
    @java.lang.Override
    public RootOuterClass.AnnotationOrBuilder getAnnotationsOrBuilder(
        int index) {
      return annotations_.get(index);
    }

    public static final int SCORE_FIELD_NUMBER = 3;
    private int score_;
    /**
     * <code>int32 score = 3;</code>
     * @return The score.
     */
    @java.lang.Override
    public int getScore() {
      return score_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getStatusBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, status_);
      }
      for (int i = 0; i < annotations_.size(); i++) {
        output.writeMessage(2, annotations_.get(i));
      }
      if (score_ != 0) {
        output.writeInt32(3, score_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getStatusBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, status_);
      }
      for (int i = 0; i < annotations_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, annotations_.get(i));
      }
      if (score_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, score_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof RootOuterClass.Output)) {
        return super.equals(obj);
      }
      RootOuterClass.Output other = (RootOuterClass.Output) obj;

      if (!getStatus()
          .equals(other.getStatus())) return false;
      if (!getAnnotationsList()
          .equals(other.getAnnotationsList())) return false;
      if (getScore()
          != other.getScore()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + STATUS_FIELD_NUMBER;
      hash = (53 * hash) + getStatus().hashCode();
      if (getAnnotationsCount() > 0) {
        hash = (37 * hash) + ANNOTATIONS_FIELD_NUMBER;
        hash = (53 * hash) + getAnnotationsList().hashCode();
      }
      hash = (37 * hash) + SCORE_FIELD_NUMBER;
      hash = (53 * hash) + getScore();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static RootOuterClass.Output parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RootOuterClass.Output parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RootOuterClass.Output parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RootOuterClass.Output parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RootOuterClass.Output parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RootOuterClass.Output parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RootOuterClass.Output parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RootOuterClass.Output parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static RootOuterClass.Output parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static RootOuterClass.Output parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static RootOuterClass.Output parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RootOuterClass.Output parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(RootOuterClass.Output prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Output}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Output)
        RootOuterClass.OutputOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return RootOuterClass.internal_static_Output_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return RootOuterClass.internal_static_Output_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                RootOuterClass.Output.class, RootOuterClass.Output.Builder.class);
      }

      // Construct using RootOuterClass.Output.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getAnnotationsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        status_ = "";

        if (annotationsBuilder_ == null) {
          annotations_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          annotationsBuilder_.clear();
        }
        score_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return RootOuterClass.internal_static_Output_descriptor;
      }

      @java.lang.Override
      public RootOuterClass.Output getDefaultInstanceForType() {
        return RootOuterClass.Output.getDefaultInstance();
      }

      @java.lang.Override
      public RootOuterClass.Output build() {
        RootOuterClass.Output result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public RootOuterClass.Output buildPartial() {
        RootOuterClass.Output result = new RootOuterClass.Output(this);
        int from_bitField0_ = bitField0_;
        result.status_ = status_;
        if (annotationsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            annotations_ = java.util.Collections.unmodifiableList(annotations_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.annotations_ = annotations_;
        } else {
          result.annotations_ = annotationsBuilder_.build();
        }
        result.score_ = score_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof RootOuterClass.Output) {
          return mergeFrom((RootOuterClass.Output)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(RootOuterClass.Output other) {
        if (other == RootOuterClass.Output.getDefaultInstance()) return this;
        if (!other.getStatus().isEmpty()) {
          status_ = other.status_;
          onChanged();
        }
        if (annotationsBuilder_ == null) {
          if (!other.annotations_.isEmpty()) {
            if (annotations_.isEmpty()) {
              annotations_ = other.annotations_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureAnnotationsIsMutable();
              annotations_.addAll(other.annotations_);
            }
            onChanged();
          }
        } else {
          if (!other.annotations_.isEmpty()) {
            if (annotationsBuilder_.isEmpty()) {
              annotationsBuilder_.dispose();
              annotationsBuilder_ = null;
              annotations_ = other.annotations_;
              bitField0_ = (bitField0_ & ~0x00000001);
              annotationsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getAnnotationsFieldBuilder() : null;
            } else {
              annotationsBuilder_.addAllMessages(other.annotations_);
            }
          }
        }
        if (other.getScore() != 0) {
          setScore(other.getScore());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        RootOuterClass.Output parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (RootOuterClass.Output) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object status_ = "";
      /**
       * <code>string status = 1;</code>
       * @return The status.
       */
      public java.lang.String getStatus() {
        java.lang.Object ref = status_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          status_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string status = 1;</code>
       * @return The bytes for status.
       */
      public com.google.protobuf.ByteString
          getStatusBytes() {
        java.lang.Object ref = status_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          status_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string status = 1;</code>
       * @param value The status to set.
       * @return This builder for chaining.
       */
      public Builder setStatus(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string status = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearStatus() {
        
        status_ = getDefaultInstance().getStatus();
        onChanged();
        return this;
      }
      /**
       * <code>string status = 1;</code>
       * @param value The bytes for status to set.
       * @return This builder for chaining.
       */
      public Builder setStatusBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        status_ = value;
        onChanged();
        return this;
      }

      private java.util.List<RootOuterClass.Annotation> annotations_ =
        java.util.Collections.emptyList();
      private void ensureAnnotationsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          annotations_ = new java.util.ArrayList<RootOuterClass.Annotation>(annotations_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          RootOuterClass.Annotation, RootOuterClass.Annotation.Builder, RootOuterClass.AnnotationOrBuilder> annotationsBuilder_;

      /**
       * <code>repeated .Annotation annotations = 2;</code>
       */
      public java.util.List<RootOuterClass.Annotation> getAnnotationsList() {
        if (annotationsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(annotations_);
        } else {
          return annotationsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Annotation annotations = 2;</code>
       */
      public int getAnnotationsCount() {
        if (annotationsBuilder_ == null) {
          return annotations_.size();
        } else {
          return annotationsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Annotation annotations = 2;</code>
       */
      public RootOuterClass.Annotation getAnnotations(int index) {
        if (annotationsBuilder_ == null) {
          return annotations_.get(index);
        } else {
          return annotationsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Annotation annotations = 2;</code>
       */
      public Builder setAnnotations(
          int index, RootOuterClass.Annotation value) {
        if (annotationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAnnotationsIsMutable();
          annotations_.set(index, value);
          onChanged();
        } else {
          annotationsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Annotation annotations = 2;</code>
       */
      public Builder setAnnotations(
          int index, RootOuterClass.Annotation.Builder builderForValue) {
        if (annotationsBuilder_ == null) {
          ensureAnnotationsIsMutable();
          annotations_.set(index, builderForValue.build());
          onChanged();
        } else {
          annotationsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Annotation annotations = 2;</code>
       */
      public Builder addAnnotations(RootOuterClass.Annotation value) {
        if (annotationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAnnotationsIsMutable();
          annotations_.add(value);
          onChanged();
        } else {
          annotationsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Annotation annotations = 2;</code>
       */
      public Builder addAnnotations(
          int index, RootOuterClass.Annotation value) {
        if (annotationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAnnotationsIsMutable();
          annotations_.add(index, value);
          onChanged();
        } else {
          annotationsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Annotation annotations = 2;</code>
       */
      public Builder addAnnotations(
          RootOuterClass.Annotation.Builder builderForValue) {
        if (annotationsBuilder_ == null) {
          ensureAnnotationsIsMutable();
          annotations_.add(builderForValue.build());
          onChanged();
        } else {
          annotationsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Annotation annotations = 2;</code>
       */
      public Builder addAnnotations(
          int index, RootOuterClass.Annotation.Builder builderForValue) {
        if (annotationsBuilder_ == null) {
          ensureAnnotationsIsMutable();
          annotations_.add(index, builderForValue.build());
          onChanged();
        } else {
          annotationsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Annotation annotations = 2;</code>
       */
      public Builder addAllAnnotations(
          java.lang.Iterable<? extends RootOuterClass.Annotation> values) {
        if (annotationsBuilder_ == null) {
          ensureAnnotationsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, annotations_);
          onChanged();
        } else {
          annotationsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Annotation annotations = 2;</code>
       */
      public Builder clearAnnotations() {
        if (annotationsBuilder_ == null) {
          annotations_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          annotationsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Annotation annotations = 2;</code>
       */
      public Builder removeAnnotations(int index) {
        if (annotationsBuilder_ == null) {
          ensureAnnotationsIsMutable();
          annotations_.remove(index);
          onChanged();
        } else {
          annotationsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Annotation annotations = 2;</code>
       */
      public RootOuterClass.Annotation.Builder getAnnotationsBuilder(
          int index) {
        return getAnnotationsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Annotation annotations = 2;</code>
       */
      public RootOuterClass.AnnotationOrBuilder getAnnotationsOrBuilder(
          int index) {
        if (annotationsBuilder_ == null) {
          return annotations_.get(index);  } else {
          return annotationsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Annotation annotations = 2;</code>
       */
      public java.util.List<? extends RootOuterClass.AnnotationOrBuilder> 
           getAnnotationsOrBuilderList() {
        if (annotationsBuilder_ != null) {
          return annotationsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(annotations_);
        }
      }
      /**
       * <code>repeated .Annotation annotations = 2;</code>
       */
      public RootOuterClass.Annotation.Builder addAnnotationsBuilder() {
        return getAnnotationsFieldBuilder().addBuilder(
            RootOuterClass.Annotation.getDefaultInstance());
      }
      /**
       * <code>repeated .Annotation annotations = 2;</code>
       */
      public RootOuterClass.Annotation.Builder addAnnotationsBuilder(
          int index) {
        return getAnnotationsFieldBuilder().addBuilder(
            index, RootOuterClass.Annotation.getDefaultInstance());
      }
      /**
       * <code>repeated .Annotation annotations = 2;</code>
       */
      public java.util.List<RootOuterClass.Annotation.Builder> 
           getAnnotationsBuilderList() {
        return getAnnotationsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          RootOuterClass.Annotation, RootOuterClass.Annotation.Builder, RootOuterClass.AnnotationOrBuilder> 
          getAnnotationsFieldBuilder() {
        if (annotationsBuilder_ == null) {
          annotationsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              RootOuterClass.Annotation, RootOuterClass.Annotation.Builder, RootOuterClass.AnnotationOrBuilder>(
                  annotations_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          annotations_ = null;
        }
        return annotationsBuilder_;
      }

      private int score_ ;
      /**
       * <code>int32 score = 3;</code>
       * @return The score.
       */
      @java.lang.Override
      public int getScore() {
        return score_;
      }
      /**
       * <code>int32 score = 3;</code>
       * @param value The score to set.
       * @return This builder for chaining.
       */
      public Builder setScore(int value) {
        
        score_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 score = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearScore() {
        
        score_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Output)
    }

    // @@protoc_insertion_point(class_scope:Output)
    private static final RootOuterClass.Output DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new RootOuterClass.Output();
    }

    public static RootOuterClass.Output getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Output>
        PARSER = new com.google.protobuf.AbstractParser<Output>() {
      @java.lang.Override
      public Output parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Output(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Output> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Output> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public RootOuterClass.Output getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FileOutputOrBuilder extends
      // @@protoc_insertion_point(interface_extends:FileOutput)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.Root root = 1;</code>
     * @return Whether the root field is set.
     */
    boolean hasRoot();
    /**
     * <code>.Root root = 1;</code>
     * @return The root.
     */
    RootOuterClass.Root getRoot();
    /**
     * <code>.Root root = 1;</code>
     */
    RootOuterClass.RootOrBuilder getRootOrBuilder();

    /**
     * <code>repeated .Output outputs = 2;</code>
     */
    java.util.List<RootOuterClass.Output> 
        getOutputsList();
    /**
     * <code>repeated .Output outputs = 2;</code>
     */
    RootOuterClass.Output getOutputs(int index);
    /**
     * <code>repeated .Output outputs = 2;</code>
     */
    int getOutputsCount();
    /**
     * <code>repeated .Output outputs = 2;</code>
     */
    java.util.List<? extends RootOuterClass.OutputOrBuilder> 
        getOutputsOrBuilderList();
    /**
     * <code>repeated .Output outputs = 2;</code>
     */
    RootOuterClass.OutputOrBuilder getOutputsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code FileOutput}
   */
  public static final class FileOutput extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:FileOutput)
      FileOutputOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use FileOutput.newBuilder() to construct.
    private FileOutput(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FileOutput() {
      outputs_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new FileOutput();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private FileOutput(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              RootOuterClass.Root.Builder subBuilder = null;
              if (root_ != null) {
                subBuilder = root_.toBuilder();
              }
              root_ = input.readMessage(RootOuterClass.Root.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(root_);
                root_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                outputs_ = new java.util.ArrayList<RootOuterClass.Output>();
                mutable_bitField0_ |= 0x00000001;
              }
              outputs_.add(
                  input.readMessage(RootOuterClass.Output.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          outputs_ = java.util.Collections.unmodifiableList(outputs_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return RootOuterClass.internal_static_FileOutput_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return RootOuterClass.internal_static_FileOutput_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              RootOuterClass.FileOutput.class, RootOuterClass.FileOutput.Builder.class);
    }

    public static final int ROOT_FIELD_NUMBER = 1;
    private RootOuterClass.Root root_;
    /**
     * <code>.Root root = 1;</code>
     * @return Whether the root field is set.
     */
    @java.lang.Override
    public boolean hasRoot() {
      return root_ != null;
    }
    /**
     * <code>.Root root = 1;</code>
     * @return The root.
     */
    @java.lang.Override
    public RootOuterClass.Root getRoot() {
      return root_ == null ? RootOuterClass.Root.getDefaultInstance() : root_;
    }
    /**
     * <code>.Root root = 1;</code>
     */
    @java.lang.Override
    public RootOuterClass.RootOrBuilder getRootOrBuilder() {
      return getRoot();
    }

    public static final int OUTPUTS_FIELD_NUMBER = 2;
    private java.util.List<RootOuterClass.Output> outputs_;
    /**
     * <code>repeated .Output outputs = 2;</code>
     */
    @java.lang.Override
    public java.util.List<RootOuterClass.Output> getOutputsList() {
      return outputs_;
    }
    /**
     * <code>repeated .Output outputs = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends RootOuterClass.OutputOrBuilder> 
        getOutputsOrBuilderList() {
      return outputs_;
    }
    /**
     * <code>repeated .Output outputs = 2;</code>
     */
    @java.lang.Override
    public int getOutputsCount() {
      return outputs_.size();
    }
    /**
     * <code>repeated .Output outputs = 2;</code>
     */
    @java.lang.Override
    public RootOuterClass.Output getOutputs(int index) {
      return outputs_.get(index);
    }
    /**
     * <code>repeated .Output outputs = 2;</code>
     */
    @java.lang.Override
    public RootOuterClass.OutputOrBuilder getOutputsOrBuilder(
        int index) {
      return outputs_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (root_ != null) {
        output.writeMessage(1, getRoot());
      }
      for (int i = 0; i < outputs_.size(); i++) {
        output.writeMessage(2, outputs_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (root_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getRoot());
      }
      for (int i = 0; i < outputs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, outputs_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof RootOuterClass.FileOutput)) {
        return super.equals(obj);
      }
      RootOuterClass.FileOutput other = (RootOuterClass.FileOutput) obj;

      if (hasRoot() != other.hasRoot()) return false;
      if (hasRoot()) {
        if (!getRoot()
            .equals(other.getRoot())) return false;
      }
      if (!getOutputsList()
          .equals(other.getOutputsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasRoot()) {
        hash = (37 * hash) + ROOT_FIELD_NUMBER;
        hash = (53 * hash) + getRoot().hashCode();
      }
      if (getOutputsCount() > 0) {
        hash = (37 * hash) + OUTPUTS_FIELD_NUMBER;
        hash = (53 * hash) + getOutputsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static RootOuterClass.FileOutput parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RootOuterClass.FileOutput parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RootOuterClass.FileOutput parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RootOuterClass.FileOutput parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RootOuterClass.FileOutput parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RootOuterClass.FileOutput parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RootOuterClass.FileOutput parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RootOuterClass.FileOutput parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static RootOuterClass.FileOutput parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static RootOuterClass.FileOutput parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static RootOuterClass.FileOutput parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RootOuterClass.FileOutput parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(RootOuterClass.FileOutput prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code FileOutput}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:FileOutput)
        RootOuterClass.FileOutputOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return RootOuterClass.internal_static_FileOutput_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return RootOuterClass.internal_static_FileOutput_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                RootOuterClass.FileOutput.class, RootOuterClass.FileOutput.Builder.class);
      }

      // Construct using RootOuterClass.FileOutput.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getOutputsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (rootBuilder_ == null) {
          root_ = null;
        } else {
          root_ = null;
          rootBuilder_ = null;
        }
        if (outputsBuilder_ == null) {
          outputs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          outputsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return RootOuterClass.internal_static_FileOutput_descriptor;
      }

      @java.lang.Override
      public RootOuterClass.FileOutput getDefaultInstanceForType() {
        return RootOuterClass.FileOutput.getDefaultInstance();
      }

      @java.lang.Override
      public RootOuterClass.FileOutput build() {
        RootOuterClass.FileOutput result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public RootOuterClass.FileOutput buildPartial() {
        RootOuterClass.FileOutput result = new RootOuterClass.FileOutput(this);
        int from_bitField0_ = bitField0_;
        if (rootBuilder_ == null) {
          result.root_ = root_;
        } else {
          result.root_ = rootBuilder_.build();
        }
        if (outputsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            outputs_ = java.util.Collections.unmodifiableList(outputs_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.outputs_ = outputs_;
        } else {
          result.outputs_ = outputsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof RootOuterClass.FileOutput) {
          return mergeFrom((RootOuterClass.FileOutput)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(RootOuterClass.FileOutput other) {
        if (other == RootOuterClass.FileOutput.getDefaultInstance()) return this;
        if (other.hasRoot()) {
          mergeRoot(other.getRoot());
        }
        if (outputsBuilder_ == null) {
          if (!other.outputs_.isEmpty()) {
            if (outputs_.isEmpty()) {
              outputs_ = other.outputs_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureOutputsIsMutable();
              outputs_.addAll(other.outputs_);
            }
            onChanged();
          }
        } else {
          if (!other.outputs_.isEmpty()) {
            if (outputsBuilder_.isEmpty()) {
              outputsBuilder_.dispose();
              outputsBuilder_ = null;
              outputs_ = other.outputs_;
              bitField0_ = (bitField0_ & ~0x00000001);
              outputsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getOutputsFieldBuilder() : null;
            } else {
              outputsBuilder_.addAllMessages(other.outputs_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        RootOuterClass.FileOutput parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (RootOuterClass.FileOutput) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private RootOuterClass.Root root_;
      private com.google.protobuf.SingleFieldBuilderV3<
          RootOuterClass.Root, RootOuterClass.Root.Builder, RootOuterClass.RootOrBuilder> rootBuilder_;
      /**
       * <code>.Root root = 1;</code>
       * @return Whether the root field is set.
       */
      public boolean hasRoot() {
        return rootBuilder_ != null || root_ != null;
      }
      /**
       * <code>.Root root = 1;</code>
       * @return The root.
       */
      public RootOuterClass.Root getRoot() {
        if (rootBuilder_ == null) {
          return root_ == null ? RootOuterClass.Root.getDefaultInstance() : root_;
        } else {
          return rootBuilder_.getMessage();
        }
      }
      /**
       * <code>.Root root = 1;</code>
       */
      public Builder setRoot(RootOuterClass.Root value) {
        if (rootBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          root_ = value;
          onChanged();
        } else {
          rootBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.Root root = 1;</code>
       */
      public Builder setRoot(
          RootOuterClass.Root.Builder builderForValue) {
        if (rootBuilder_ == null) {
          root_ = builderForValue.build();
          onChanged();
        } else {
          rootBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.Root root = 1;</code>
       */
      public Builder mergeRoot(RootOuterClass.Root value) {
        if (rootBuilder_ == null) {
          if (root_ != null) {
            root_ =
              RootOuterClass.Root.newBuilder(root_).mergeFrom(value).buildPartial();
          } else {
            root_ = value;
          }
          onChanged();
        } else {
          rootBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.Root root = 1;</code>
       */
      public Builder clearRoot() {
        if (rootBuilder_ == null) {
          root_ = null;
          onChanged();
        } else {
          root_ = null;
          rootBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.Root root = 1;</code>
       */
      public RootOuterClass.Root.Builder getRootBuilder() {
        
        onChanged();
        return getRootFieldBuilder().getBuilder();
      }
      /**
       * <code>.Root root = 1;</code>
       */
      public RootOuterClass.RootOrBuilder getRootOrBuilder() {
        if (rootBuilder_ != null) {
          return rootBuilder_.getMessageOrBuilder();
        } else {
          return root_ == null ?
              RootOuterClass.Root.getDefaultInstance() : root_;
        }
      }
      /**
       * <code>.Root root = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          RootOuterClass.Root, RootOuterClass.Root.Builder, RootOuterClass.RootOrBuilder> 
          getRootFieldBuilder() {
        if (rootBuilder_ == null) {
          rootBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              RootOuterClass.Root, RootOuterClass.Root.Builder, RootOuterClass.RootOrBuilder>(
                  getRoot(),
                  getParentForChildren(),
                  isClean());
          root_ = null;
        }
        return rootBuilder_;
      }

      private java.util.List<RootOuterClass.Output> outputs_ =
        java.util.Collections.emptyList();
      private void ensureOutputsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          outputs_ = new java.util.ArrayList<RootOuterClass.Output>(outputs_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          RootOuterClass.Output, RootOuterClass.Output.Builder, RootOuterClass.OutputOrBuilder> outputsBuilder_;

      /**
       * <code>repeated .Output outputs = 2;</code>
       */
      public java.util.List<RootOuterClass.Output> getOutputsList() {
        if (outputsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(outputs_);
        } else {
          return outputsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Output outputs = 2;</code>
       */
      public int getOutputsCount() {
        if (outputsBuilder_ == null) {
          return outputs_.size();
        } else {
          return outputsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Output outputs = 2;</code>
       */
      public RootOuterClass.Output getOutputs(int index) {
        if (outputsBuilder_ == null) {
          return outputs_.get(index);
        } else {
          return outputsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Output outputs = 2;</code>
       */
      public Builder setOutputs(
          int index, RootOuterClass.Output value) {
        if (outputsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOutputsIsMutable();
          outputs_.set(index, value);
          onChanged();
        } else {
          outputsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Output outputs = 2;</code>
       */
      public Builder setOutputs(
          int index, RootOuterClass.Output.Builder builderForValue) {
        if (outputsBuilder_ == null) {
          ensureOutputsIsMutable();
          outputs_.set(index, builderForValue.build());
          onChanged();
        } else {
          outputsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Output outputs = 2;</code>
       */
      public Builder addOutputs(RootOuterClass.Output value) {
        if (outputsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOutputsIsMutable();
          outputs_.add(value);
          onChanged();
        } else {
          outputsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Output outputs = 2;</code>
       */
      public Builder addOutputs(
          int index, RootOuterClass.Output value) {
        if (outputsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOutputsIsMutable();
          outputs_.add(index, value);
          onChanged();
        } else {
          outputsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Output outputs = 2;</code>
       */
      public Builder addOutputs(
          RootOuterClass.Output.Builder builderForValue) {
        if (outputsBuilder_ == null) {
          ensureOutputsIsMutable();
          outputs_.add(builderForValue.build());
          onChanged();
        } else {
          outputsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Output outputs = 2;</code>
       */
      public Builder addOutputs(
          int index, RootOuterClass.Output.Builder builderForValue) {
        if (outputsBuilder_ == null) {
          ensureOutputsIsMutable();
          outputs_.add(index, builderForValue.build());
          onChanged();
        } else {
          outputsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Output outputs = 2;</code>
       */
      public Builder addAllOutputs(
          java.lang.Iterable<? extends RootOuterClass.Output> values) {
        if (outputsBuilder_ == null) {
          ensureOutputsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, outputs_);
          onChanged();
        } else {
          outputsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Output outputs = 2;</code>
       */
      public Builder clearOutputs() {
        if (outputsBuilder_ == null) {
          outputs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          outputsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Output outputs = 2;</code>
       */
      public Builder removeOutputs(int index) {
        if (outputsBuilder_ == null) {
          ensureOutputsIsMutable();
          outputs_.remove(index);
          onChanged();
        } else {
          outputsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Output outputs = 2;</code>
       */
      public RootOuterClass.Output.Builder getOutputsBuilder(
          int index) {
        return getOutputsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Output outputs = 2;</code>
       */
      public RootOuterClass.OutputOrBuilder getOutputsOrBuilder(
          int index) {
        if (outputsBuilder_ == null) {
          return outputs_.get(index);  } else {
          return outputsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Output outputs = 2;</code>
       */
      public java.util.List<? extends RootOuterClass.OutputOrBuilder> 
           getOutputsOrBuilderList() {
        if (outputsBuilder_ != null) {
          return outputsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(outputs_);
        }
      }
      /**
       * <code>repeated .Output outputs = 2;</code>
       */
      public RootOuterClass.Output.Builder addOutputsBuilder() {
        return getOutputsFieldBuilder().addBuilder(
            RootOuterClass.Output.getDefaultInstance());
      }
      /**
       * <code>repeated .Output outputs = 2;</code>
       */
      public RootOuterClass.Output.Builder addOutputsBuilder(
          int index) {
        return getOutputsFieldBuilder().addBuilder(
            index, RootOuterClass.Output.getDefaultInstance());
      }
      /**
       * <code>repeated .Output outputs = 2;</code>
       */
      public java.util.List<RootOuterClass.Output.Builder> 
           getOutputsBuilderList() {
        return getOutputsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          RootOuterClass.Output, RootOuterClass.Output.Builder, RootOuterClass.OutputOrBuilder> 
          getOutputsFieldBuilder() {
        if (outputsBuilder_ == null) {
          outputsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              RootOuterClass.Output, RootOuterClass.Output.Builder, RootOuterClass.OutputOrBuilder>(
                  outputs_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          outputs_ = null;
        }
        return outputsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:FileOutput)
    }

    // @@protoc_insertion_point(class_scope:FileOutput)
    private static final RootOuterClass.FileOutput DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new RootOuterClass.FileOutput();
    }

    public static RootOuterClass.FileOutput getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FileOutput>
        PARSER = new com.google.protobuf.AbstractParser<FileOutput>() {
      @java.lang.Override
      public FileOutput parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FileOutput(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FileOutput> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FileOutput> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public RootOuterClass.FileOutput getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FoundExpresssionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:FoundExpresssion)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string expression = 1;</code>
     * @return The expression.
     */
    java.lang.String getExpression();
    /**
     * <code>string expression = 1;</code>
     * @return The bytes for expression.
     */
    com.google.protobuf.ByteString
        getExpressionBytes();

    /**
     * <code>string file = 2;</code>
     * @return The file.
     */
    java.lang.String getFile();
    /**
     * <code>string file = 2;</code>
     * @return The bytes for file.
     */
    com.google.protobuf.ByteString
        getFileBytes();

    /**
     * <code>int32 line_number = 3;</code>
     * @return The lineNumber.
     */
    int getLineNumber();

    /**
     * <code>.SupportedLanguage language = 4;</code>
     * @return The enum numeric value on the wire for language.
     */
    int getLanguageValue();
    /**
     * <code>.SupportedLanguage language = 4;</code>
     * @return The language.
     */
    RootOuterClass.SupportedLanguage getLanguage();
  }
  /**
   * Protobuf type {@code FoundExpresssion}
   */
  public static final class FoundExpresssion extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:FoundExpresssion)
      FoundExpresssionOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use FoundExpresssion.newBuilder() to construct.
    private FoundExpresssion(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FoundExpresssion() {
      expression_ = "";
      file_ = "";
      language_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new FoundExpresssion();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private FoundExpresssion(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              expression_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              file_ = s;
              break;
            }
            case 24: {

              lineNumber_ = input.readInt32();
              break;
            }
            case 32: {
              int rawValue = input.readEnum();

              language_ = rawValue;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return RootOuterClass.internal_static_FoundExpresssion_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return RootOuterClass.internal_static_FoundExpresssion_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              RootOuterClass.FoundExpresssion.class, RootOuterClass.FoundExpresssion.Builder.class);
    }

    public static final int EXPRESSION_FIELD_NUMBER = 1;
    private volatile java.lang.Object expression_;
    /**
     * <code>string expression = 1;</code>
     * @return The expression.
     */
    @java.lang.Override
    public java.lang.String getExpression() {
      java.lang.Object ref = expression_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        expression_ = s;
        return s;
      }
    }
    /**
     * <code>string expression = 1;</code>
     * @return The bytes for expression.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getExpressionBytes() {
      java.lang.Object ref = expression_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        expression_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FILE_FIELD_NUMBER = 2;
    private volatile java.lang.Object file_;
    /**
     * <code>string file = 2;</code>
     * @return The file.
     */
    @java.lang.Override
    public java.lang.String getFile() {
      java.lang.Object ref = file_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        file_ = s;
        return s;
      }
    }
    /**
     * <code>string file = 2;</code>
     * @return The bytes for file.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getFileBytes() {
      java.lang.Object ref = file_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        file_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LINE_NUMBER_FIELD_NUMBER = 3;
    private int lineNumber_;
    /**
     * <code>int32 line_number = 3;</code>
     * @return The lineNumber.
     */
    @java.lang.Override
    public int getLineNumber() {
      return lineNumber_;
    }

    public static final int LANGUAGE_FIELD_NUMBER = 4;
    private int language_;
    /**
     * <code>.SupportedLanguage language = 4;</code>
     * @return The enum numeric value on the wire for language.
     */
    @java.lang.Override public int getLanguageValue() {
      return language_;
    }
    /**
     * <code>.SupportedLanguage language = 4;</code>
     * @return The language.
     */
    @java.lang.Override public RootOuterClass.SupportedLanguage getLanguage() {
      @SuppressWarnings("deprecation")
      RootOuterClass.SupportedLanguage result = RootOuterClass.SupportedLanguage.valueOf(language_);
      return result == null ? RootOuterClass.SupportedLanguage.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getExpressionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, expression_);
      }
      if (!getFileBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, file_);
      }
      if (lineNumber_ != 0) {
        output.writeInt32(3, lineNumber_);
      }
      if (language_ != RootOuterClass.SupportedLanguage.Python.getNumber()) {
        output.writeEnum(4, language_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getExpressionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, expression_);
      }
      if (!getFileBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, file_);
      }
      if (lineNumber_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, lineNumber_);
      }
      if (language_ != RootOuterClass.SupportedLanguage.Python.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, language_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof RootOuterClass.FoundExpresssion)) {
        return super.equals(obj);
      }
      RootOuterClass.FoundExpresssion other = (RootOuterClass.FoundExpresssion) obj;

      if (!getExpression()
          .equals(other.getExpression())) return false;
      if (!getFile()
          .equals(other.getFile())) return false;
      if (getLineNumber()
          != other.getLineNumber()) return false;
      if (language_ != other.language_) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + EXPRESSION_FIELD_NUMBER;
      hash = (53 * hash) + getExpression().hashCode();
      hash = (37 * hash) + FILE_FIELD_NUMBER;
      hash = (53 * hash) + getFile().hashCode();
      hash = (37 * hash) + LINE_NUMBER_FIELD_NUMBER;
      hash = (53 * hash) + getLineNumber();
      hash = (37 * hash) + LANGUAGE_FIELD_NUMBER;
      hash = (53 * hash) + language_;
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static RootOuterClass.FoundExpresssion parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RootOuterClass.FoundExpresssion parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RootOuterClass.FoundExpresssion parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RootOuterClass.FoundExpresssion parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RootOuterClass.FoundExpresssion parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RootOuterClass.FoundExpresssion parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RootOuterClass.FoundExpresssion parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RootOuterClass.FoundExpresssion parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static RootOuterClass.FoundExpresssion parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static RootOuterClass.FoundExpresssion parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static RootOuterClass.FoundExpresssion parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RootOuterClass.FoundExpresssion parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(RootOuterClass.FoundExpresssion prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code FoundExpresssion}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:FoundExpresssion)
        RootOuterClass.FoundExpresssionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return RootOuterClass.internal_static_FoundExpresssion_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return RootOuterClass.internal_static_FoundExpresssion_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                RootOuterClass.FoundExpresssion.class, RootOuterClass.FoundExpresssion.Builder.class);
      }

      // Construct using RootOuterClass.FoundExpresssion.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        expression_ = "";

        file_ = "";

        lineNumber_ = 0;

        language_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return RootOuterClass.internal_static_FoundExpresssion_descriptor;
      }

      @java.lang.Override
      public RootOuterClass.FoundExpresssion getDefaultInstanceForType() {
        return RootOuterClass.FoundExpresssion.getDefaultInstance();
      }

      @java.lang.Override
      public RootOuterClass.FoundExpresssion build() {
        RootOuterClass.FoundExpresssion result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public RootOuterClass.FoundExpresssion buildPartial() {
        RootOuterClass.FoundExpresssion result = new RootOuterClass.FoundExpresssion(this);
        result.expression_ = expression_;
        result.file_ = file_;
        result.lineNumber_ = lineNumber_;
        result.language_ = language_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof RootOuterClass.FoundExpresssion) {
          return mergeFrom((RootOuterClass.FoundExpresssion)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(RootOuterClass.FoundExpresssion other) {
        if (other == RootOuterClass.FoundExpresssion.getDefaultInstance()) return this;
        if (!other.getExpression().isEmpty()) {
          expression_ = other.expression_;
          onChanged();
        }
        if (!other.getFile().isEmpty()) {
          file_ = other.file_;
          onChanged();
        }
        if (other.getLineNumber() != 0) {
          setLineNumber(other.getLineNumber());
        }
        if (other.language_ != 0) {
          setLanguageValue(other.getLanguageValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        RootOuterClass.FoundExpresssion parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (RootOuterClass.FoundExpresssion) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object expression_ = "";
      /**
       * <code>string expression = 1;</code>
       * @return The expression.
       */
      public java.lang.String getExpression() {
        java.lang.Object ref = expression_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          expression_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string expression = 1;</code>
       * @return The bytes for expression.
       */
      public com.google.protobuf.ByteString
          getExpressionBytes() {
        java.lang.Object ref = expression_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          expression_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string expression = 1;</code>
       * @param value The expression to set.
       * @return This builder for chaining.
       */
      public Builder setExpression(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        expression_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string expression = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearExpression() {
        
        expression_ = getDefaultInstance().getExpression();
        onChanged();
        return this;
      }
      /**
       * <code>string expression = 1;</code>
       * @param value The bytes for expression to set.
       * @return This builder for chaining.
       */
      public Builder setExpressionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        expression_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object file_ = "";
      /**
       * <code>string file = 2;</code>
       * @return The file.
       */
      public java.lang.String getFile() {
        java.lang.Object ref = file_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          file_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string file = 2;</code>
       * @return The bytes for file.
       */
      public com.google.protobuf.ByteString
          getFileBytes() {
        java.lang.Object ref = file_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          file_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string file = 2;</code>
       * @param value The file to set.
       * @return This builder for chaining.
       */
      public Builder setFile(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        file_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string file = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearFile() {
        
        file_ = getDefaultInstance().getFile();
        onChanged();
        return this;
      }
      /**
       * <code>string file = 2;</code>
       * @param value The bytes for file to set.
       * @return This builder for chaining.
       */
      public Builder setFileBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        file_ = value;
        onChanged();
        return this;
      }

      private int lineNumber_ ;
      /**
       * <code>int32 line_number = 3;</code>
       * @return The lineNumber.
       */
      @java.lang.Override
      public int getLineNumber() {
        return lineNumber_;
      }
      /**
       * <code>int32 line_number = 3;</code>
       * @param value The lineNumber to set.
       * @return This builder for chaining.
       */
      public Builder setLineNumber(int value) {
        
        lineNumber_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 line_number = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearLineNumber() {
        
        lineNumber_ = 0;
        onChanged();
        return this;
      }

      private int language_ = 0;
      /**
       * <code>.SupportedLanguage language = 4;</code>
       * @return The enum numeric value on the wire for language.
       */
      @java.lang.Override public int getLanguageValue() {
        return language_;
      }
      /**
       * <code>.SupportedLanguage language = 4;</code>
       * @param value The enum numeric value on the wire for language to set.
       * @return This builder for chaining.
       */
      public Builder setLanguageValue(int value) {
        
        language_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.SupportedLanguage language = 4;</code>
       * @return The language.
       */
      @java.lang.Override
      public RootOuterClass.SupportedLanguage getLanguage() {
        @SuppressWarnings("deprecation")
        RootOuterClass.SupportedLanguage result = RootOuterClass.SupportedLanguage.valueOf(language_);
        return result == null ? RootOuterClass.SupportedLanguage.UNRECOGNIZED : result;
      }
      /**
       * <code>.SupportedLanguage language = 4;</code>
       * @param value The language to set.
       * @return This builder for chaining.
       */
      public Builder setLanguage(RootOuterClass.SupportedLanguage value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        language_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.SupportedLanguage language = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearLanguage() {
        
        language_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:FoundExpresssion)
    }

    // @@protoc_insertion_point(class_scope:FoundExpresssion)
    private static final RootOuterClass.FoundExpresssion DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new RootOuterClass.FoundExpresssion();
    }

    public static RootOuterClass.FoundExpresssion getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FoundExpresssion>
        PARSER = new com.google.protobuf.AbstractParser<FoundExpresssion>() {
      @java.lang.Override
      public FoundExpresssion parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FoundExpresssion(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FoundExpresssion> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FoundExpresssion> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public RootOuterClass.FoundExpresssion getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Token_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Token_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Expression_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Expression_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Root_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Root_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Annotation_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Annotation_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Output_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Output_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_FileOutput_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_FileOutput_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_FoundExpresssion_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_FoundExpresssion_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\nroot.proto\"\213\003\n\005Token\022\r\n\005token\030\010 \001(\t\022\030\n" +
      "\004type\030\t \001(\0162\n.TokenType\022\031\n\004flag\030\n \001(\0162\t." +
      "FlagTypeH\000\022)\n\014substitution\030\013 \001(\0162\021.Subst" +
      "itutionTypeH\000\0225\n\022quantifiermodifier\030\014 \001(" +
      "\0162\027.QuantifierModifierTypeH\000\022\035\n\006anchor\030\r" +
      " \001(\0162\013.AnchorTypeH\000\022\023\n\tcharacter\030\016 \001(\tH\000" +
      "\022%\n\nlookaround\030\017 \001(\0162\017.LookaroundTypeH\000\022" +
      "\035\n\006escape\030\020 \001(\0162\013.EscapeTypeH\000\022\'\n\010groupr" +
      "ef\030\021 \001(\0162\023.GroupReferenceTypeH\000\022-\n\016chara" +
      "cterclass\030\022 \001(\0162\023.CharacterClassTypeH\000B\n" +
      "\n\010sub_type\"S\n\nExpression\022\013\n\003raw\030\005 \001(\t\022\026\n" +
      "\006tokens\030\006 \003(\0132\006.Token\022 \n\013expressions\030\007 \003" +
      "(\0132\013.Expression\"p\n\004Root\022\014\n\004file\030\001 \001(\t\022$\n" +
      "\010language\030\002 \001(\0162\022.SupportedLanguage\022\023\n\013l" +
      "ine_number\030\003 \001(\005\022\037\n\nexpression\030\004 \001(\0132\013.E" +
      "xpression\"{\n\nAnnotation\022\014\n\004note\030\001 \001(\t\022\020\n" +
      "\006entity\030\002 \001(\tH\000\022\027\n\005token\030\003 \001(\0132\006.TokenH\000" +
      "\022!\n\nexpression\030\004 \001(\0132\013.ExpressionH\000B\021\n\017r" +
      "elevant_entity\"I\n\006Output\022\016\n\006status\030\001 \001(\t" +
      "\022 \n\013annotations\030\002 \003(\0132\013.Annotation\022\r\n\005sc" +
      "ore\030\003 \001(\005\";\n\nFileOutput\022\023\n\004root\030\001 \001(\0132\005." +
      "Root\022\030\n\007outputs\030\002 \003(\0132\007.Output\"o\n\020FoundE" +
      "xpresssion\022\022\n\nexpression\030\001 \001(\t\022\014\n\004file\030\002" +
      " \001(\t\022\023\n\013line_number\030\003 \001(\005\022$\n\010language\030\004 " +
      "\001(\0162\022.SupportedLanguage*V\n\010FlagType\022\n\n\006I" +
      "gnore\020\000\022\n\n\006Global\020\001\022\r\n\tMultiline\020\002\022\013\n\007Un" +
      "icode\020\003\022\n\n\006Sticky\020\004\022\n\n\006Dotall\020\005*^\n\020Subst" +
      "itutionType\022\t\n\005Match\020\000\022\013\n\007Capture\020\001\022\017\n\013B" +
      "eforeMatch\020\002\022\016\n\nAfterMatch\020\003\022\021\n\rEscapedD" +
      "ollar\020\004*]\n\nAnchorType\022\r\n\tBeginning\020\000\022\007\n\003" +
      "End\020\001\022\020\n\014WordBoundary\020\002\022\023\n\017NotWordBounda" +
      "ry\020\003\022\020\n\014ForwardSlash\020\004*r\n\026QuantifierModi" +
      "fierType\022\010\n\004Plus\020\000\022\010\n\004Star\020\001\022\027\n\023Specifie" +
      "dQuantifier\020\002\022\014\n\010Optional\020\003\022\010\n\004Lazy\020\004\022\023\n" +
      "\017AlternationPipe\020\005*n\n\016LookaroundType\022\025\n\021" +
      "PositiveLookahead\020\000\022\025\n\021NegativeLookahead" +
      "\020\001\022\026\n\022PositiveLookbehind\020\002\022\026\n\022NegativeLo" +
      "okbehind\020\003*\251\001\n\nEscapeType\022\021\n\rUnicodeEsca" +
      "pe\020\000\022\t\n\005Octal\020\001\022\017\n\013Hexadecimal\020\002\022\014\n\010Rese" +
      "rved\020\003\022\013\n\007Control\020\004\022\007\n\003Tab\020\005\022\013\n\007Newline\020" +
      "\006\022\017\n\013VerticalTab\020\007\022\014\n\010FormFeed\020\010\022\022\n\016Carr" +
      "iageReturn\020\t\022\010\n\004Null\020\n*n\n\022GroupReference" +
      "Type\022\017\n\013OpenCapture\020\000\022\020\n\014CloseCapture\020\001\022" +
      "\r\n\tGroupName\020\002\022\024\n\020NumericReference\020\003\022\020\n\014" +
      "NonCapturing\020\004*\206\002\n\022CharacterClassType\022\013\n" +
      "\007OpenSet\020\000\022\014\n\010CloseSet\020\001\022\017\n\013SetNegation\020" +
      "\002\022\020\n\014InclusiveSet\020\003\022\014\n\010RangeSet\020\004\022\007\n\003Dot" +
      "\020\005\022\010\n\004Word\020\006\022\013\n\007NotWord\020\007\022\t\n\005Digit\020\010\022\014\n\010" +
      "NotDigit\020\t\022\016\n\nWhitespace\020\n\022\021\n\rNotWhitesp" +
      "ace\020\013\022\031\n\025UnicodePropertyEscape\020\014\022\034\n\030NotU" +
      "nicodePropertyEscape\020\r\022\017\n\013AtomicGroup\020\016*" +
      "\236\001\n\tTokenType\022\010\n\004Flag\020\000\022\020\n\014Substitution\020" +
      "\001\022\026\n\022QuantifierModifier\020\002\022\n\n\006Anchor\020\003\022\022\n" +
      "\016GroupReference\020\004\022\r\n\tCharacter\020\005\022\016\n\nLook" +
      "around\020\006\022\n\n\006Escape\020\007\022\022\n\016CharacterClass\020\010" +
      "*b\n\021SupportedLanguage\022\n\n\006Python\020\000\022\016\n\nJav" +
      "aScript\020\001\022\010\n\004Java\020\002\022\010\n\004Rust\020\003\022\n\n\006Golang\020" +
      "\004\022\007\n\003PHP\020\005\022\010\n\004Ruby\020\006b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_Token_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_Token_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Token_descriptor,
        new java.lang.String[] { "Token", "Type", "Flag", "Substitution", "Quantifiermodifier", "Anchor", "Character", "Lookaround", "Escape", "Groupref", "Characterclass", "SubType", });
    internal_static_Expression_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_Expression_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Expression_descriptor,
        new java.lang.String[] { "Raw", "Tokens", "Expressions", });
    internal_static_Root_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_Root_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Root_descriptor,
        new java.lang.String[] { "File", "Language", "LineNumber", "Expression", });
    internal_static_Annotation_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_Annotation_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Annotation_descriptor,
        new java.lang.String[] { "Note", "Entity", "Token", "Expression", "RelevantEntity", });
    internal_static_Output_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_Output_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Output_descriptor,
        new java.lang.String[] { "Status", "Annotations", "Score", });
    internal_static_FileOutput_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_FileOutput_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_FileOutput_descriptor,
        new java.lang.String[] { "Root", "Outputs", });
    internal_static_FoundExpresssion_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_FoundExpresssion_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_FoundExpresssion_descriptor,
        new java.lang.String[] { "Expression", "File", "LineNumber", "Language", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
